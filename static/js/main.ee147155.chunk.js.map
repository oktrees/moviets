{"version":3,"sources":["components/templete/MainTemplate.tsx","components/footer/Footer.tsx","components/common/List.tsx","components/common/Image.tsx","components/common/MainSwiper.tsx","components/common/ImageBack.tsx","components/common/Loading.tsx","components/home/Home.tsx","components/movie/Movie.tsx","components/television/Television.tsx","components/search/form/Input.tsx","components/search/Search.tsx","components/detail/details/DetailInfo.tsx","components/detail/details/DetailVideos.tsx","components/detail/details/DetailCredits.tsx","components/detail/details/DetailSimilars.tsx","components/detail/details/DetailSeasons.tsx","components/detail/Detail.tsx","components/header/Header.tsx","components/slider/Slider.tsx","containers/HeaderContainer.tsx","containers/HomeContainer.tsx","containers/MovieContainer.tsx","containers/TelevisionContainer.tsx","containers/SearchContainer.tsx","containers/DetailContainer.tsx","containers/SliderContainer.tsx","pages/Home.tsx","pages/Movie.tsx","pages/Television.tsx","pages/Search.tsx","pages/Detail.tsx","lib/routes/index.ts","store/rootReducer.ts","store/rootSaga.ts","store/index.ts","components/App.tsx","reportWebVitals.ts","styles/GlobalStyles.tsx","index.tsx","store/movie/actions.ts","store/television/actions.ts","lib/client/index.ts","store/constants.ts","lib/redux/constants.ts","store/search/actions.ts","store/movie/index.ts","store/television/index.ts","store/search/index.ts","store/movie/reducer.ts","store/television/reducer.ts","store/search/reducer.ts","lib/api/movies.ts","store/movie/sagas.ts","lib/api/televisions.ts","store/television/sagas.ts","lib/api/search.ts","store/search/sagas.ts"],"names":["Containter","styled","div","Header","header","Slider","section","Section","Footer","footer","MainTemplate","children","slider","className","SwiperCore","use","Navigation","Container","HoverBox","Title","List","listArr","keyword","onMouseEnterImg","e","target","closest","style","opacity","onMouseLeaveImg","navigation","breakpoints","480","width","slidesPerView","centeredSlides","481","data","results","map","result","i","to","id","onMouseEnter","onMouseLeave","vote_average","src","poster_path","alt","height","title","name","props","Image","onError","align","console","log","MainSwiper","list","backdrop_path","date","release_date","voteAverage","overview","Contents","ImageBack","circleRotateAnimation","keyframes","strokeOffsetAnimation","LoadingCircle","svg","Loading","useEffect","window","scrollTo","strokeDasharray","cx","cy","r","Home","nowPlayingMovies","onAirTelevisions","loading","Movie","trendMovies","topRatedMovies","Television","popualarTelevisions","topRatedTelevisions","form","Input","searchDispatch","useState","searchParam","setSearchParam","onSubmit","preventDefault","type","onChange","value","placeholder","Search","movies","televisions","BackImg","imgUrl","ImgBox","Info","InfoBox","DetailInfo","detail","isMovie","original_title","original_name","next_episode_to_air","air_date","last_air_date","runtime","number_of_seasons","episode_number","last_episode_to_air","genres","val","join","production_countries","VideoName","DetailVideos","detailVideos","spaceBetween","href","key","rel","SwiperBox","detailCredits","cast","profile_path","character","crew","_","uniqBy","known_for_department","DetailSimilars","detailSimilars","DetailSeasons","seasons","Detail","DetailCredits","Logo","Link","HeaderContainer","HomeContainer","useSelector","state","dispatch","useDispatch","movieActions","getNowPlayingMoviesRequest","televisionActions","getOnAirTelevisionsRequest","MovieContainer","getTrendMoviesRequest","getTopRatedMoviesRequest","TelevisionContainer","getPopualarTelevisionsRequest","getTopRatedTelevisionsRequest","SearchContainer","search","searchActions","getMoviesRequest","getTelevisionsRequest","DetailContainer","keywardName","getDetailRequest","getDetailVideosRequest","getDetailCreditsRequest","getDetailSimilarsRequest","SliderContainer","Deatil","useLocation","pathname","split","useParams","routes","path","page","exact","rootReducer","combineReducers","movieReducer","televisionReducer","searchnReducer","rootSaga","all","movieSagas","televisionSagas","searchSagas","rootStore","sagaMiddleware","createSagaMiddleware","enhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","run","configureStore","App","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyles","createGlobalStyle","reset","ReactDOM","render","StrictMode","document","getElementById","CONST","GET_TREND_MOVIES","createRequestTypes","GET_TOP_RATED_MOVIES","GET_NOW_PLAYING_MOVIES","GET_DETAIL","GET_DETAIL_VIDEOS","GET_DETAIL_CREDITS","GET_DETAIL_SIMILARS","Actions","REQUEST","getTrendMoviesSuccess","payload","SUCCESS","getTrendMoviesFailure","error","FAILURE","getTopRatedMoviesSuccess","getTopRatedMoviesFailure","getNowPlayingMoviesSuccess","getNowPlayingMoviesFailure","getDetailSuccess","getDetailFailure","getDetailVideosSuccess","getDetailVideosFailure","getDetailCreditsSuccess","getDetailCreditsFailure","getDetailSimilarsSuccess","getDetailSimilarsFailure","GET_ON_AIR_TELEVISIONS","GET_TOP_RATED_TELEVISIONS","GET_POPULAR_TELEVISIONS","getOnAirTelevisionsSuccess","getOnAirTelevisionsFailure","getTopRatedTelevisionsSuccess","getTopRatedTelevisionsFailure","getPopualarTelevisionsSuccess","getPopualarTelevisionsFailure","client","axios","this","create","baseURL","process","timeout","headers","params","api_key","language","get","response","post","put","delete","base","reduce","acc","GET_MOVIES","GET_TELEVISIONS","queryString","getMoviesSuccess","getMoviesFailure","getTelevisionsSuccess","getTelevisionsFailure","initialState","action","searchReducer","getTodayMovies","getTopRatedMovies","getNowPlayingMovies","getMovieDetail","getMovieVideos","getMovieCredits","getMovieSimilar","getTrendMoviesSaga","getTopRatedMoviesSaga","getNowPlayingMoviesSaga","getDetailSaga","getDetailVideosSaga","getDetailCreditsSaga","getDetailSimilarSaga","call","takeEvery","getOnAirTv","getPopularTv","getTopRatedTv","getTvDetail","getTvVideos","getTvCredits","getTvSimilar","getOnAirTelevisionsSaga","getTopRatedTelevisionsSaga","getPopualarTelevisionsSaga","getSearchMovies","getSearchTelevisions","getMoviesSaga","getTelevisionsSaga"],"mappings":"2LAmBMA,EAAaC,IAAOC,IAAV,uTAaVC,EAASF,IAAOG,OAAV,oGAMNC,EAASJ,IAAOK,QAAV,oGAMNC,EAAUN,IAAOK,QAAV,oLASPE,EAASP,IAAOQ,OAAV,oGAMGC,EAjDuB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUF,EAAb,EAAaA,OAAQL,EAArB,EAAqBA,OAAQQ,EAA7B,EAA6BA,OAA7B,OACpC,eAACZ,EAAD,CAAYa,UAAU,gBAAtB,UACE,cAAC,EAAD,UAAST,IACRQ,GAAU,cAAC,EAAD,UAASA,IACpB,cAACL,EAAD,UAAUI,IACV,cAAC,EAAD,UAASF,QCNPT,EAAaC,IAAOC,IAAV,qQAaDM,EAnBU,kBACvB,cAAC,EAAD,UACE,sF,0CCIJM,IAAWC,IAAI,CAACC,MAOhB,I,IAmDMC,EAAYhB,IAAOC,IAAV,8UAkBTgB,EAAWjB,IAAOC,IAAV,onBAgCRiB,EAAQlB,IAAOC,IAAV,4FAQIkB,EA7Ge,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAClCC,EAAkB,SAACC,GACvBA,EAAEC,OAAOC,QAAQ,aAAaC,MAAMC,QAAU,GAE1CC,EAAkB,SAACL,GACvBA,EAAEC,OAAOC,QAAQ,aAAaC,MAAMC,QAAU,GAGhD,OACE,cAACX,EAAD,UACE,cAAC,IAAD,CACEa,YAAU,EACVC,YAAa,CACXC,IAAK,CACHC,MAAO,IACPC,cAAe,EACfC,gBAAgB,GAElBC,IAAK,CACHH,MAAO,IACPC,cAAe,SAVrB,SAcGb,EAAQgB,KAAKC,QAAQC,KAAI,SAACC,EAAaC,GAAd,OACxB,eAAC,IAAD,CAAqB5B,UAAU,YAA/B,UACE,eAAC,IAAD,CAAM6B,GAAE,WAAMpB,EAAN,YAAiBkB,EAAOG,IAAhC,UACE,eAACzB,EAAD,CACEL,UAAU,WACV+B,aAAcrB,EACdsB,aAAchB,EAHhB,UAKE,wBACA,2DACA,gCAAK,0CAAL,IAAqBW,EAAOM,aAA5B,cAEF,cAAC,EAAD,CACEC,IAAKP,EAAOQ,YACZC,IAAI,cACJhB,MAAM,MACNiB,OAAO,WAGX,cAAC/B,EAAD,UAAoB,UAAZG,EAAsBkB,EAAOW,MAAQX,EAAOY,SAlBpCX,WCLtBxB,EAAYhB,IAAOC,IAAV,wKACJ,SAACmD,GAAD,OAAWA,EAAMpB,MAAQ,QACxB,SAACoB,GAAD,OAAWA,EAAMH,OAAS,QASvBI,EArCgB,SAAC,GAAiC,IAA/BP,EAA8B,EAA9BA,IAAKE,EAAyB,EAAzBA,IAAKhB,EAAoB,EAApBA,MAAOiB,EAAa,EAAbA,OAQjD,OACE,cAAC,EAAD,CAAWjB,MAAOA,EAAOiB,OAAQA,EAAQH,IAAKA,EAA9C,SACE,qBAAKA,IACHA,EAAG,sCAAkCd,EAAlC,YAA2Cc,GAAQ,sBACtDd,MAAOc,GAAO,IACdE,IAAKA,EACLM,QAba,SAAC/B,GAClBA,EAAEC,OAAOsB,IAAM,sBACfvB,EAAEC,OAAOQ,MAAO,IAChBT,EAAEC,OAAOyB,OAAQ,IACjB1B,EAAEC,OAAO+B,MAAO,SAChBC,QAAQC,IAAIX,SCRhBjC,IAAWC,IAAI,CAACC,MAOhB,I,cAyBMC,EAAYhB,IAAOC,IAAV,6FAKAyD,EA9BqB,SAAC,GAAD,QAClCC,EADkC,EAClCA,KADkC,EAElCtC,QAFkC,OAIlC,cAAC,EAAD,UACE,cAAC,IAAD,CACAQ,YAAU,EACVI,cAAe,EAFf,UAIO,OAAJ0B,QAAI,IAAJA,GAAA,UAAAA,EAAMvB,YAAN,eAAYC,WAAZ,OAAuBsB,QAAvB,IAAuBA,GAAvB,UAAuBA,EAAMvB,YAA7B,aAAuB,EAAYC,QAAQC,KAAI,SAACC,EAAaC,GAAd,OAC9C,cAAC,IAAD,UACE,cAAC,EAAD,CACEM,IAAKP,EAAOqB,cACZlB,GAAIH,EAAOG,GACXQ,MAAOX,EAAOW,MACdW,KAAMtB,EAAOuB,aACbC,YAAaxB,EAAOM,aACpBmB,SAAUzB,EAAOyB,YAPHxB,YCmBpBxB,EAAYhB,IAAOC,IAAV,kcAUa,SAACmD,GAAD,MAAW,sCAAwCA,EAAMN,OAU/E5C,EAASF,IAAOC,IAAV,yNAWNgE,EAAWjE,IAAOC,IAAV,i/BAgDCiE,EA9GoB,SAAC,GAO7B,IANLpB,EAMI,EANJA,IACAJ,EAKI,EALJA,GACAQ,EAII,EAJJA,MACAW,EAGI,EAHJA,KACAE,EAEI,EAFJA,YACAC,EACI,EADJA,SAEA,OACE,cAAC,EAAD,CAAWlB,IAAKA,EAAhB,SACE,sBAAKlC,UAAU,UAAf,UACE,cAAC,EAAD,8CACA,eAACqD,EAAD,WACE,sBAAKrD,UAAU,oBAAf,UACE,8BAAMsC,IACN,gCAAMW,EAAN,sBAAkBE,KAClB,8BAAK,cAAC,IAAD,CAAMtB,GAAE,iBAAYC,GAApB,2CAEP,qBAAK9B,UAAU,qBAAf,SACE,8BAAMoD,eCdlB,I,mCAAMhD,GAAYhB,IAAOC,IAAV,iIAOTkE,GAAwBC,YAAH,2EAMrBC,GAAwBD,YAAH,0JAYrBE,GAAgBtE,IAAOuE,IAAV,wMAGJJ,GAKEE,IAGFG,GAlDf,WAKE,OAJAC,qBAAU,WACRC,OAAOC,SAAS,EAAG,MAInB,cAAC,GAAD,UACE,cAACL,GAAD,CAAeM,gBAAiB,IAAhC,SACE,wBAAQC,GAAG,MAAMC,GAAG,MAAMC,EAAE,YCsB9B/D,GAAYhB,IAAOC,IAAV,oTAgBA+E,GAtCe,SAAC,GAAD,QAC5BC,EAD4B,EAC5BA,iBACAC,EAF4B,EAE5BA,iBAF4B,OAI5B,eAAC,GAAD,YACID,EAAiBE,SAAWD,EAAiBC,UAAY,cAAC,GAAD,IAC3D,wEACiB,OAAhBF,QAAgB,IAAhBA,GAAA,UAAAA,EAAkB7C,YAAlB,eAAwBC,QAAQ,KAC/B,cAAC,EAAD,CACEjB,QAAS6D,EACT5D,QAAQ,UAGZ,oFACiB,OAAhB6D,QAAgB,IAAhBA,GAAA,UAAAA,EAAkB9C,YAAlB,eAAwBC,QAAQ,KAC/B,cAAC,EAAD,CACEjB,QAAS8D,EACT7D,QAAQ,WCJVL,GAAYhB,IAAOC,IAAV,sTAgBAmF,GA9BgB,SAAC,GAAD,QAC7BC,EAD6B,EAC7BA,YACAC,EAF6B,EAE7BA,eAF6B,OAI7B,eAAC,GAAD,YACID,EAAYF,SAAWG,EAAeH,UAAY,cAAC,GAAD,IACpD,2DACY,OAAXE,QAAW,IAAXA,GAAA,UAAAA,EAAajD,YAAb,eAAmBC,QAAQ,KAAM,cAAC,EAAD,CAAMjB,QAASiE,EAAahE,QAAQ,UAEtE,uEACe,OAAdiE,QAAc,IAAdA,GAAA,UAAAA,EAAgBlD,YAAhB,eAAsBC,QAAQ,KAAM,cAAC,EAAD,CAAMjB,QAASkE,EAAgBjE,QAAQ,cCK1EL,GAAYhB,IAAOC,IAAV,sTAiBAsF,GAhCqB,SAAC,GAAD,QAClCC,EADkC,EAClCA,oBACAC,EAFkC,EAElCA,oBAFkC,OAIlC,eAAC,GAAD,YACID,EAAoBL,SAAWM,EAAoBN,UAAY,cAAC,GAAD,IAEjE,wEACoB,OAAnBK,QAAmB,IAAnBA,GAAA,UAAAA,EAAqBpD,YAArB,eAA2BC,QAAQ,KAAM,cAAC,EAAD,CAAMjB,QAASoE,EAAqBnE,QAAQ,OAEtF,oFACoB,OAAnBoE,QAAmB,IAAnBA,GAAA,UAAAA,EAAqBrD,YAArB,eAA2BC,QAAQ,KAAM,cAAC,EAAD,CAAMjB,QAASqE,EAAqBpE,QAAQ,W,SCGpFL,GAAYhB,IAAO0F,KAAV,yPAeAC,GAjCgB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAAqB,EACfC,mBAAS,IADM,oBAC9CC,EAD8C,KACjCC,EADiC,KAWrD,OACE,cAAC,GAAD,CAAWC,SATQ,SAACzE,GACpBA,EAAE0E,iBACFL,EAAeE,IAOf,SACE,uBAAOI,KAAK,OAAOC,SAND,SAAC5E,GACrBwE,EAAexE,EAAEC,OAAO4E,QAKsBA,MAAON,EAAaO,YAAY,wECgB5ErF,GAAYhB,IAAOC,IAAV,0VAkBAqG,GAzCiB,SAAC,GAAD,QAC9BC,EAD8B,EAC9BA,OACAC,EAF8B,EAE9BA,YACAZ,EAH8B,EAG9BA,eAH8B,OAK9B,eAAC,GAAD,YACIW,EAAOpB,SAAWqB,EAAYrB,UAAY,cAAC,GAAD,IAC5C,cAAC,GAAD,CAAOS,eAAgBA,KAChB,OAANW,QAAM,IAANA,GAAA,UAAAA,EAAQnE,YAAR,eAAcC,QAAQ,KACrB,qCACE,gEACA,cAAC,EAAD,CAAMjB,QAASmF,EAAQlF,QAAQ,cAIvB,OAAXmF,QAAW,IAAXA,GAAA,UAAAA,EAAapE,YAAb,eAAmBC,QAAQ,KAC5B,qCACE,6DACA,cAAC,EAAD,CAAMjB,QAASoF,EAAanF,QAAQ,cCgDpCtB,GAAaC,IAAOC,IAAV,iSAeVwG,GAAUzG,IAAOC,IAAV,0QAMa,SAAAmD,GAAK,OAAS,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOsD,QAAS,uCAAyCtD,EAAMsD,OAAS,QAOrGC,GAAS3G,IAAOC,IAAV,iDAGN2G,GAAO5G,IAAOC,IAAV,uaAyBJ4G,GAAU7G,IAAOC,IAAV,wlBA+BE6G,GA5JqB,SAAC,GAAD,sBAClCC,EADkC,EAClCA,OACAC,EAFkC,EAElCA,QAFkC,OAIlC,eAAC,GAAD,WACE,cAACP,GAAD,CAASC,QAAc,OAANK,QAAM,IAANA,OAAA,EAAAA,EAAQ3E,OAAQ2E,EAAO3E,KAAKwB,gBAC7C,cAAC+C,GAAD,UACE,cAAC,EAAD,CACE7D,IAAKiE,EAAO3E,KAAKW,YACjBC,IAAI,YACJhB,MAAM,MACNiB,OAAO,UAGX,eAAC2D,GAAD,WACE,6BACGI,EAAUD,EAAO3E,KAAKc,MAAQ6D,EAAO3E,KAAKe,OAE7C,qBAAKvC,UAAU,aAAf,SACGoG,EAAUD,EAAO3E,KAAK6E,eAAiBF,EAAO3E,KAAK8E,gBAEtD,eAACL,GAAD,WACE,+BACE,+BACE,+BACGG,EAAU,eAAO,iBAEjBA,EAAUD,EAAO3E,KAAK0B,cACd,OAANiD,QAAM,IAANA,GAAA,UAAAA,EAAQ3E,YAAR,mBAAc+E,2BAAd,eAAmCC,UAClCL,EAAO3E,KAAK+E,oBAAoBC,SAChCL,EAAO3E,KAAKiF,iBAIpB,+BACE,+BACCL,EAAU,eAAO,iBAEjBA,EACCD,EAAO3E,KAAKkF,QAAQ,SACpBP,EAAO3E,KAAKmF,kBAAoB,MAC/B,UAAAR,EAAO3E,YAAP,mBAAa+E,2BAAb,eAAkCK,iBACjC,UAAAT,EAAO3E,YAAP,mBAAa+E,2BAAb,eAAkCK,gBAAiB,UACnD,UAAAT,EAAO3E,YAAP,mBAAaqF,2BAAb,eAAkCD,gBAAiB,aAGzD,+BACE,gDACCT,EAAO3E,KAAKS,gBAEf,+BACE,gDACCkE,EAAO3E,KAAKsF,OAAOpF,KAAI,SAACqF,GAAD,OAAcA,EAAIxE,QAAMyE,KAAK,aAEvD,+BACE,gDADF,UAEGb,EAAO3E,KAAKyF,qBAAqB,UAFpC,aAEG,EAAqC1E,WAG1C,8BAAM4D,EAAO3E,KAAK4B,qBC/D1BnD,IAAWC,IAAI,CAACC,MAOhB,I,MAkCMC,GAAYhB,IAAOC,IAAV,qYAsBT6H,GAAY9H,IAAOC,IAAV,uEAKA8H,GA7DuB,SAAC,GAAD,MACpCC,EADoC,EACpCA,aADoC,EAEpChB,QAFoC,OAIpC,eAAC,GAAD,WACE,8BAAiB,OAAZgB,QAAY,IAAZA,GAAA,UAAAA,EAAc5F,YAAd,eAAoBC,QAAQ,KAAM,6BACvC,cAAC,IAAD,CACAR,YAAU,EACVoG,aAAc,GACdnG,YAAa,CACXC,IAAK,CACHC,MAAO,IACPC,cAAe,EACfC,gBAAgB,GAElBC,IAAK,CACHH,MAAO,IACPC,cAAe,SAXnB,SAeG+F,EAAa5F,KAAKC,QAAQC,KAAI,SAACC,EAAaC,GAAd,OAC7B,eAAC,IAAD,WACE,mBAAG0F,KAAI,0CAAqC3F,EAAO4F,KAAO3G,OAAO,SAAS4G,IAAI,sBAA9E,SACE,qBAAKtF,IAAG,qCAAgCP,EAAO4F,IAAvC,UAAoDnF,IAAI,cAAchB,MAAM,WAEtF,cAAC8F,GAAD,UAAYvF,EAAOY,SAJHX,Y,oBC1B1B3B,IAAWC,IAAI,CAACC,MAMhB,I,GAsEMC,GAAYhB,IAAOC,IAAV,6pBAkCToI,GAAYrI,IAAOC,IAAV,mDAKA0F,GA7GgB,SAAC,GAAD,cAC7B2C,EAD6B,EAC7BA,cAD6B,OAG7B,eAAC,GAAD,WACE,eAACD,GAAD,WACE,8BAAkB,OAAbC,QAAa,IAAbA,GAAA,UAAAA,EAAelG,YAAf,eAAqBmG,KAAK,KAAM,iBACrC,cAAC,IAAD,CACE1G,YAAU,EACVoG,aAAc,GACdnG,YAAa,CACXC,IAAK,CACHC,MAAO,IACPC,cAAe,EACfC,gBAAgB,GAElBC,IAAK,CACHH,MAAO,IACPC,cAAe,SAXrB,gBAeGqG,QAfH,IAeGA,GAfH,UAeGA,EAAelG,YAflB,iBAeG,EAAqBmG,YAfxB,aAeG,EAA2BjG,KAAI,SAACC,EAAaC,GAAd,OAC9B,eAAC,IAAD,WACE,cAAC,EAAD,CACEM,IAAKP,EAAOiG,aACZxF,IAAI,aACJhB,MAAM,MACNiB,OAAO,QAET,qBAAKrC,UAAU,WAAf,SAA2B2B,EAAOY,OAClC,qBAAKvC,UAAU,gBAAf,SAAgC2B,EAAOkG,cARvBjG,WAcxB,eAAC6F,GAAD,WACE,8BAAkB,OAAbC,QAAa,IAAbA,GAAA,UAAAA,EAAelG,YAAf,eAAqBsG,KAAK,KAAM,iBACrC,cAAC,IAAD,CACE7G,YAAU,EACVoG,aAAc,GACdnG,YAAa,CACXC,IAAK,CACHC,MAAO,IACPC,cAAe,EACfC,gBAAgB,GAElBC,IAAK,CACHH,MAAO,IACPC,cAAe,SAXrB,SAeG0G,KAAEC,OAAF,OAASN,QAAT,IAASA,GAAT,UAASA,EAAelG,YAAxB,aAAS,EAAqBsG,KAAM,MAAMpG,KAAI,SAACC,EAAaC,GAAd,OAC7C,eAAC,IAAD,WACE,cAAC,EAAD,CACEM,IAAKP,EAAOiG,aACZxF,IAAI,aACJhB,MAAM,MACNiB,OAAO,QAET,qBAAKrC,UAAU,WAAf,SAA2B2B,EAAOY,OAClC,qBAAKvC,UAAU,iBAAf,SAAiC2B,EAAOsG,yBARxBrG,eC5D5B3B,IAAWC,IAAI,CAACC,MAOhB,I,GAwCMC,GAAYhB,IAAOC,IAAV,2iBA8BA6I,GAtEyB,SAAC,GAAD,MACtCC,EADsC,EACtCA,eACA/B,EAFsC,EAEtCA,QAFsC,OAItC,eAAC,GAAD,WACE,8BAAmB,OAAd+B,QAAc,IAAdA,GAAA,UAAAA,EAAgB3G,YAAhB,eAAsBC,QAAQ,KAAM,2CACzC,cAAC,IAAD,CACER,YAAU,EACVoG,aAAc,GACdnG,YAAa,CACXC,IAAK,CACHC,MAAO,IACPC,cAAe,EACfC,gBAAgB,GAElBC,IAAK,CACHH,MAAO,IACPC,cAAe,SAXrB,SAeG8G,EAAe3G,KAAKC,QAAQC,KAAI,SAACC,EAAaC,GAAd,OAC/B,cAAC,IAAD,UACE,eAAC,IAAD,CAAMC,GAAIuE,EAAO,iBAAazE,EAAOG,IAApB,cAAkCH,EAAOG,IAA1D,UACE,cAAC,EAAD,CACEI,IAAKP,EAAOQ,YACZC,IAAI,YACJhB,MAAM,MACNiB,OAAO,QAET,qBAAKrC,UAAU,YAAf,SACGoG,EAAUzE,EAAOW,MAAQX,EAAOY,WATrBX,YC9B1B3B,IAAWC,IAAI,CAACC,MAMhB,I,YAoCMC,GAAYhB,IAAOC,IAAV,ykBAkCA+I,GAtEwB,SAAC,GAAD,YACrCjC,EADqC,EACrCA,OADqC,OAGrC,eAAC,GAAD,WACE,8BAAW,OAANA,QAAM,IAANA,GAAA,UAAAA,EAAQ3E,YAAR,eAAc6G,QAAQ,KAAM,iBACjC,cAAC,IAAD,CACApH,YAAU,EACVoG,aAAc,GACZnG,YAAa,CACXC,IAAK,CACHC,MAAO,IACPC,cAAe,EACfC,gBAAgB,GAElBC,IAAK,CACHH,MAAO,IACPC,cAAe,SAXrB,UAeS,OAAN8E,QAAM,IAANA,GAAA,UAAAA,EAAQ3E,YAAR,eAAc6G,QAAQ,MAAtB,OAA4BlC,QAA5B,IAA4BA,GAA5B,UAA4BA,EAAQ3E,YAApC,iBAA4B,EAAc6G,eAA1C,aAA4B,EAAuB3G,KAAI,SAACC,EAAaC,GAAd,OACtD,eAAC,IAAD,WACE,cAAC,EAAD,CACIM,IAAKP,EAAOQ,YACZC,IAAI,aACJhB,MAAM,MACNiB,OAAO,QAET,qBAAKrC,UAAU,aAAf,SAA6B2B,EAAOY,OACpC,qBAAKvC,UAAU,aAAf,SAA6B2B,EAAO6E,aARtB5E,aCDpBzC,GAAaC,IAAOC,IAAV,gFAODiJ,GA3BiB,SAAC,GAAD,UAC9BnC,EAD8B,EAC9BA,OACAiB,EAF8B,EAE9BA,aACAM,EAH8B,EAG9BA,cACAS,EAJ8B,EAI9BA,eACA/B,EAL8B,EAK9BA,QAL8B,OAO9B,cAAC,GAAD,UACID,EAAO5B,SAAW6C,EAAa7C,SAAWmD,EAAcnD,SAAW4D,EAAe5D,QAClF,cAAC,GAAD,IACA,sCACS,OAAN4B,QAAM,IAANA,OAAA,EAAAA,EAAQ3E,OAAQ,cAAC,GAAD,CAAY2E,OAAQA,EAAQC,QAASA,KACzC,OAAZgB,QAAY,IAAZA,GAAA,UAAAA,EAAc5F,YAAd,eAAoBC,UAAW,cAAC,GAAD,CAAc2F,aAAcA,EAAchB,QAASA,KAC5E,OAAND,QAAM,IAANA,GAAA,UAAAA,EAAQ3E,YAAR,eAAc6G,UAAW,cAAC,GAAD,CAAelC,OAAQA,KACnC,OAAbuB,QAAa,IAAbA,OAAA,EAAAA,EAAelG,OAAO,cAAC+G,GAAD,CAAeb,cAAeA,KACtC,OAAdS,QAAc,IAAdA,GAAA,UAAAA,EAAgB3G,YAAhB,eAAsBC,UAAU,cAAC,GAAD,CAAgB0G,eAAgBA,EAAgB/B,QAASA,UCX5FjH,GAAaC,IAAOC,IAAV,gYAkBVmJ,GAAOpJ,YAAOqJ,IAAPrJ,CAAH,mEAKKE,GAlCiB,kBAG9B,eAAC,GAAD,CAAYU,UAAU,aAAtB,UACE,cAACwI,GAAD,CAAM3G,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,mBACA,cAAC,IAAD,CAAMA,GAAG,MAAT,gBACA,cAAC,IAAD,CAAMA,GAAG,UAAT,wBCIEzB,GAAYhB,IAAOC,IAAV,+FAMAG,GAfiB,SAAC,GAAD,MAC9BuD,EAD8B,EAC9BA,KAD8B,OAG9B,eAAC,GAAD,WACGA,EAAKwB,SAAW,cAAC,GAAD,KACZ,OAAJxB,QAAI,IAAJA,GAAA,UAAAA,EAAMvB,YAAN,eAAYC,QAAQ,KAAM,cAAC,EAAD,CAAYsB,KAAMA,EAAMtC,QAAQ,cCJhDiI,GANmB,WAChC,OACE,cAAC,GAAD,K,oCCsBWC,GAlBwB,SAACnG,GAAW,IACzC6B,EAA2BuE,cAAiB,SAACC,GAAD,OAAsBA,EAAMlD,UAAxEtB,iBACAC,EAAqBsE,cAAY,SAACC,GAAD,OAAsBA,EAAMjD,eAA7DtB,iBACFwE,EAAWC,eAOjB,OALAlF,qBAAU,WACRiF,EAASE,WAAaC,8BACtBH,EAASI,WAAkBC,gCAC3B,CAACL,IAGD,cAAC,GAAD,CACEzE,iBAAkBA,EAClBC,iBAAkBA,KCIT8E,GAjByB,SAAC5G,GAAW,IAAD,EACToG,cAAY,SAACC,GAAD,OAAsBA,EAAMlD,UAAxElB,EADyC,EACzCA,YAAaC,EAD4B,EAC5BA,eACfoE,EAAWC,eAOjB,OALAlF,qBAAU,WACRiF,EAASE,WAAaK,yBACtBP,EAASE,WAAaM,8BACtB,CAACR,IAGD,cAAC,GAAD,CACErE,YAAaA,EACbC,eAAgBA,KCMP6E,GAlB8B,SAAC/G,GAAW,IAAD,EACDoG,cAAY,SAACC,GAAD,OAAsBA,EAAMjD,eAArFhB,EAD8C,EAC9CA,oBAAqBC,EADyB,EACzBA,oBACvBiE,EAAWC,eAOjB,OALAlF,qBAAU,WACRiF,EAASI,WAAkBM,iCAC3BV,EAASI,WAAkBO,mCAC3B,CAACX,IAGD,cAAC,GAAD,CACElE,oBAAqBA,EACrBC,oBAAqBA,KCMZ6E,GAlB0B,WAAO,IAAD,EACbd,cAAY,SAACC,GAAD,OAAsBA,EAAMc,UAAhEhE,EADqC,EACrCA,OAAQC,EAD6B,EAC7BA,YACVkD,EAAWC,eAOjB,OACE,cAAC,GAAD,CACEpD,OAAQA,EACRC,YAAaA,EACbZ,eATmB,SAACE,GACtB4D,EAASc,WAAcC,iBAAiB3E,IACxC4D,EAASc,WAAcE,sBAAsB5E,QC4BlC6E,GAhC0B,SAAC,GAAoB,IAAlBjI,EAAiB,EAAjBA,GAAIrB,EAAa,EAAbA,QACxCuJ,EAA0B,UAAZvJ,EAAsB,SAAW,cAC/C2F,EAAsB,UAAZ3F,EAF2C,EAGKmI,cAAY,SAACC,GAAD,OAAsBA,EAAMmB,MAAhG7D,EAHmD,EAGnDA,OAAQiB,EAH2C,EAG3CA,aAAcM,EAH6B,EAG7BA,cAAeS,EAHc,EAGdA,eACvCW,EAAWC,eAiBjB,OAfAlF,qBAAU,WACQ,UAAZpD,GACFqI,EAASE,WAAaiB,iBAAiBnI,IACvCgH,EAASE,WAAakB,uBAAuBpI,IAC7CgH,EAASE,WAAamB,wBAAwBrI,IAC9CgH,EAASE,WAAaoB,yBAAyBtI,KAC3B,OAAZrB,IACRqI,EAASI,WAAkBe,iBAAiBnI,IAC5CgH,EAASI,WAAkBgB,uBAAuBpI,IAClDgH,EAASI,WAAkBiB,wBAAwBrI,IACnDgH,EAASI,WAAkBkB,yBAAyBtI,OAGtD,CAACgH,EAAUhH,EAAIrB,IAGf,cAAC,GAAD,CACE0F,OAAQA,EACRiB,aAAcA,EACdM,cAAeA,EACfS,eAAgBA,EAChB/B,QAASA,KCdAiE,GAf0B,SAAC7H,GAAW,IAC3C6B,EAAqBuE,cAAY,SAACC,GAAD,OAAsBA,EAAMlD,UAA7DtB,iBACFyE,EAAWC,eAMjB,OAJAlF,qBAAU,WACRiF,EAASE,WAAaC,gCACtB,CAACH,IAGD,cAAC,GAAD,CACE/F,KAAMsB,KCRGD,GARQ,WACrB,OACA,cAAC,EAAD,CAAc7E,OAAQ,cAAC,GAAD,IAAqBK,OAAQ,cAAC,EAAD,IAAYG,OAAQ,cAAC,GAAD,IAAvE,SACE,cAAC,GAAD,OCMWyE,GARU,WACvB,OACE,cAAC,EAAD,CAAcjF,OAAQ,cAAC,GAAD,IAAqBK,OAAQ,cAAC,EAAD,IAAnD,SACE,cAAC,GAAD,OCIS+E,GARc,WAC3B,OACE,cAAC,EAAD,CAAcpF,OAAQ,cAAC,GAAD,IAAqBK,OAAQ,cAAC,EAAD,IAAnD,SACE,cAAC,GAAD,OCMS8F,GARW,WACxB,OACE,cAAC,EAAD,CAAcnG,OAAQ,cAAC,GAAD,IAAqBK,OAAQ,cAAC,EAAD,IAAnD,SACE,cAAC,GAAD,O,SCQS0K,GAVU,WACvB,IAAM7J,EAAU8J,eAAcC,SAASC,MAAM,KAAK,GAC1C3I,EAAO4I,eAAP5I,GACR,OACE,cAAC,EAAD,CAAcvC,OAAQ,cAAC,GAAD,IAAqBK,OAAQ,cAAC,EAAD,IAAnD,SACE,cAAC,GAAD,CAAiBkC,GAAIA,EAAIrB,QAASA,OCT3BkK,GAAS,CACpB,CACEC,KAAM,IACNC,KAAMzG,GACN0G,OAAO,GAET,CACEF,KAAM,SACNC,KAAMrG,GACNsG,OAAO,GAET,CACEF,KAAM,aACNC,KAAMvC,GACNwC,OAAO,GAET,CACEF,KAAM,MACNC,KAAMlG,GACNmG,OAAO,GAET,CACEF,KAAM,UACNC,KAAMvC,GACNwC,OAAO,GAET,CACEF,KAAM,UACNC,KAAMnF,GACNoF,OAAO,I,kBCzBEC,GAAcC,aAAgB,CACzCrF,OAAQsF,WACRrF,YAAasF,WACbvB,OAAQwB,a,yCCHeC,IAAV,SAAUA,KAAV,kEACb,OADa,SACPC,aAAI,CACRC,wBACAC,6BACAC,2BAJW,wCCEf,I,GAmBeC,GAnBQ,WACrB,IAAMC,EAAiBC,eAIjBC,GAFH9H,OAAe+H,sCAAwCC,MAEvBC,aACjCL,IAIIM,EAAQC,aAAYlB,GAAaa,GAIvC,OAFAF,EAAeQ,IAAId,IAEZY,EAGSG,GCNHC,GAZO,WACpB,OACE,cAAC,KAAD,CAAUJ,MAAOA,GAAjB,SACE,cAAC,KAAD,UACGrB,GAAOjJ,KAAI,WAAwBE,GAAxB,IAAGgJ,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,MAAf,OACV,cAAC,KAAD,CAAOA,MAAOA,EAAOF,KAAMA,EAAMyB,UAAWxB,GAAWjJ,WCElD0K,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,SCkBCQ,GAxBMC,YAAH,mWACdC,MCIJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,SAGJC,SAASC,eAAe,SAG1BhB,M,gCClBA,uFAGaiB,EAAQ,CACnBC,iBAAkBC,YAAmB,0BACrCC,qBAAsBD,YAAmB,8BACzCE,uBAAwBF,YAAmB,gCAC3CG,WAAYH,YAAmB,oBAC/BI,kBAAmBJ,YAAmB,2BACtCK,mBAAoBL,YAAmB,4BACvCM,oBAAqBN,YAAmB,8BAgH7BO,EAAU,CACrB3E,sBA9G4B,iBAAO,CACjC/D,KAAMiI,EAAMC,iBAAiBS,OA8G/BC,sBA3G4B,SAACC,GAAD,MAAmB,CAC7C7I,KAAMiI,EAAMC,iBAAiBY,KAC7BD,YA0GFE,sBAvG4B,SAACC,GAAD,MAAiB,CAC3ChJ,KAAMiI,EAAMC,iBAAiBe,KAC7BD,UAsGFhF,yBAlG+B,iBAAO,CACtChE,KAAMiI,EAAMG,qBAAqBO,OAkGjCO,yBA/F+B,SAACL,GAAD,MAAmB,CAClD7I,KAAMiI,EAAMG,qBAAqBU,KACjCD,YA8FAM,yBA3F+B,SAACH,GAAD,MAAiB,CAChDhJ,KAAMiI,EAAMG,qBAAqBa,KACjCD,UA0FArF,2BAtFiC,iBAAO,CACxC3D,KAAMiI,EAAMI,uBAAuBM,OAsFnCS,2BAnFiC,SAACP,GAAD,MAAmB,CACpD7I,KAAMiI,EAAMI,uBAAuBS,KACnCD,YAkFAQ,2BA/EiC,SAACL,GAAD,MAAiB,CAClDhJ,KAAMiI,EAAMI,uBAAuBY,KACnCD,UA8EArE,iBA1EuB,SAACnI,GAAD,MAAiB,CACxCwD,KAAMiI,EAAMK,WAAWK,KACvBnM,OAyEA8M,iBAtEuB,SAACT,GAAD,MAAmB,CAC1C7I,KAAMiI,EAAMK,WAAWQ,KACvBD,YAqEAU,iBAlEuB,SAACP,GAAD,MAAiB,CACxChJ,KAAMiI,EAAMK,WAAWW,KACvBD,UAiEApE,uBA7D6B,SAACpI,GAAD,MAAiB,CAC9CwD,KAAMiI,EAAMM,kBAAkBI,KAC9BnM,OA4DAgN,uBAzD6B,SAACX,GAAD,MAAmB,CAChD7I,KAAMiI,EAAMM,kBAAkBO,KAC9BD,YAwDAY,uBArD6B,SAACT,GAAD,MAAiB,CAC9ChJ,KAAMiI,EAAMM,kBAAkBU,KAC9BD,UAoDAnE,wBAhD8B,SAACrI,GAAD,MAAiB,CAC/CwD,KAAMiI,EAAMO,mBAAmBG,KAC/BnM,OA+CAkN,wBA5C8B,SAACb,GAAD,MAAmB,CACjD7I,KAAMiI,EAAMO,mBAAmBM,KAC/BD,YA2CAc,wBAxC8B,SAACX,GAAD,MAAiB,CAC/ChJ,KAAMiI,EAAMO,mBAAmBS,KAC/BD,UAuCAlE,yBAnC+B,SAACtI,GAAD,MAAiB,CAChDwD,KAAMiI,EAAMQ,oBAAoBE,KAChCnM,OAkCAoN,yBA/B+B,SAACf,GAAD,MAAmB,CAClD7I,KAAMiI,EAAMQ,oBAAoBK,KAChCD,YA8BAgB,yBA3B+B,SAACb,GAAD,MAAiB,CAChDhJ,KAAMiI,EAAMQ,oBAAoBQ,KAChCD,Y,gCCtHF,uFAGaf,EAAQ,CACnB6B,uBAAwB3B,YAAmB,6BAC3C4B,0BAA2B5B,YAAmB,gCAC9C6B,wBAAyB7B,YAAmB,8BAC5CG,WAAYH,YAAmB,iBAC/BI,kBAAmBJ,YAAmB,wBACtCK,mBAAoBL,YAAmB,yBACvCM,oBAAqBN,YAAmB,2BA+G7BO,EAAU,CACrB7E,2BA7GiC,iBAAO,CACxC7D,KAAMiI,EAAM6B,uBAAuBnB,OA6GnCsB,2BA1GiC,SAACpB,GAAD,MAAmB,CACpD7I,KAAMiI,EAAM6B,uBAAuBhB,KACnCD,YAyGAqB,2BAtGiC,SAAClB,GAAD,MAAiB,CAClDhJ,KAAMiI,EAAM6B,uBAAuBb,KACnCD,UAqGA7E,8BAjGoC,iBAAO,CAC3CnE,KAAMiI,EAAM8B,0BAA0BpB,OAiGtCwB,8BA9FoC,SAACtB,GAAD,MAAmB,CACvD7I,KAAMiI,EAAM8B,0BAA0BjB,KACtCD,YA6FAuB,8BA1FoC,SAACpB,GAAD,MAAiB,CACrDhJ,KAAMiI,EAAM8B,0BAA0Bd,KACtCD,UAyFA9E,8BArFoC,iBAAO,CAC3ClE,KAAMiI,EAAM+B,wBAAwBrB,OAqFpC0B,8BAlFoC,SAACxB,GAAD,MAAmB,CACvD7I,KAAMiI,EAAM+B,wBAAwBlB,KACpCD,YAiFAyB,8BA9EoC,SAACtB,GAAD,MAAiB,CACrDhJ,KAAMiI,EAAM+B,wBAAwBf,KACpCD,UA6EArE,iBAzEuB,SAACnI,GAAD,MAAiB,CACxCwD,KAAMiI,EAAMK,WAAWK,KACvBnM,OAwEA8M,iBArEuB,SAACT,GAAD,MAAmB,CAC1C7I,KAAMiI,EAAMK,WAAWQ,KACvBD,YAoEAU,iBAjEuB,SAACP,GAAD,MAAiB,CACxChJ,KAAMiI,EAAMK,WAAWW,KACvBD,UAgEApE,uBA7D6B,SAACpI,GAAD,MAAiB,CAC9CwD,KAAMiI,EAAMM,kBAAkBI,KAC9BnM,OA4DAgN,uBAzD6B,SAACX,GAAD,MAAmB,CAChD7I,KAAMiI,EAAMM,kBAAkBO,KAC9BD,YAwDAY,uBArD6B,SAACT,GAAD,MAAiB,CAC9ChJ,KAAMiI,EAAMM,kBAAkBU,KAC9BD,UAoDAnE,wBAhD8B,SAACrI,GAAD,MAAiB,CAC/CwD,KAAMiI,EAAMO,mBAAmBG,KAC/BnM,OA+CAkN,wBA5C8B,SAACb,GAAD,MAAmB,CACjD7I,KAAMiI,EAAMO,mBAAmBM,KAC/BD,YA2CAc,wBAxC8B,SAACX,GAAD,MAAiB,CAC/ChJ,KAAMiI,EAAMO,mBAAmBS,KAC/BD,UAuCAlE,yBAnC+B,SAACtI,GAAD,MAAiB,CAChDwD,KAAMiI,EAAMQ,oBAAoBE,KAChCnM,OAkCAoN,yBA/B+B,SAACf,GAAD,MAAmB,CAClD7I,KAAMiI,EAAMQ,oBAAoBK,KAChCD,YA8BAgB,yBA3B+B,SAACb,GAAD,MAAiB,CAChDhJ,KAAMiI,EAAMQ,oBAAoBQ,KAChCD,Y,qECnEIuB,EAAS,I,WAtCb,aAAe,yBAFPC,WAEM,EACZC,KAAKD,MAAQA,IAAME,OAAO,CACxBC,QAASC,gCACTC,QAAS,IACTC,QAAS,CACP,eAAgB,oBAElBC,OAAQ,CACNC,QAASJ,mCACTK,SAAU,W,uCAIhB,SAAI3F,GAAsC,IAAxBuD,EAAuB,uDAAb,KAC1B,OAAO4B,KAAKD,MACTU,IAAI5F,EAAMuD,GACV1B,MAAK,SAACgE,GAAD,OAA6BA,O,kBAGvC,SAAK7F,EAAcuD,GACjB,OAAO4B,KAAKD,MACTY,KAAK9F,EAAMuD,GACX1B,MAAK,SAACgE,GAAD,OAA6BA,O,iBAGvC,SAAI7F,EAAcuD,GAChB,OAAO4B,KAAKD,MACTa,IAAI/F,EAAMuD,GACV1B,MAAK,SAAC9K,GAAD,OAA2BA,O,oBAGrC,SAAOiJ,GAAsC,IAAxBuD,EAAuB,uDAAb,KAC7B,OAAO4B,KAAKD,MACTc,OAAOhG,EAAMuD,GACb1B,MAAK,SAAC9K,GAAD,OAA2BA,S,MAMxBkO,O,+BCpDf,sGAAO,IAAM5B,EAAU,UACVG,EAAU,UACVG,EAAU,W,gCCEhB,SAASd,EAAmBoD,GACjC,MAAO,CAAC,UAAW,UAAW,WAAWC,QACvC,SAACC,EAAyBzL,GAExB,OADAyL,EAAIzL,GAAJ,UAAeuL,EAAf,YAAuBvL,GAChByL,IAET,IANJ,mC,gCCJA,uFAGaxD,EAAQ,CACnByD,WAAYvD,YAAmB,qBAC/BwD,gBAAiBxD,YAAmB,2BAiCzBO,EAAU,CACrBnE,iBA/BuB,SAACqH,GAAD,MAA0B,CAC/C5L,KAAMiI,EAAMyD,WAAW/C,KACvBiD,YAAY,SAAD,OAAWA,KA8BxBC,iBA3BuB,SAAChD,GAAD,MAAmB,CACxC7I,KAAMiI,EAAMyD,WAAW5C,KACvBD,YA0BFiD,iBAvBuB,SAAC9C,GAAD,MAAiB,CACtChJ,KAAMiI,EAAMyD,WAAWzC,KACvBD,UAsBFxE,sBAnB4B,SAACoH,GAAD,MAA0B,CACtD5L,KAAMiI,EAAM0D,gBAAgBhD,KAC5BiD,YAAY,SAAD,OAAWA,KAkBtBG,sBAf4B,SAAClD,GAAD,MAAmB,CAC/C7I,KAAMiI,EAAM0D,gBAAgB7C,KAC5BD,YAcAmD,sBAX4B,SAAChD,GAAD,MAAiB,CAC7ChJ,KAAMiI,EAAM0D,gBAAgB1C,KAC5BD,Y,gCCnCF,6P,gCCAA,iR,gCCAA,iQ,0DCGMiD,EAAe,CACnB9M,YAAa,CACXF,SAAS,EACT+J,MAAO,KACP9M,KAAM,MAERkD,eAAgB,CACdH,SAAS,EACT+J,MAAO,KACP9M,KAAM,MAER6C,iBAAkB,CAChBE,SAAS,EACT+J,MAAO,KACP9M,KAAM,MAER2E,OAAQ,CACN5B,SAAS,EACT+J,MAAO,KACP9M,KAAM,MAER4F,aAAc,CACZ7C,SAAS,EACT+J,MAAO,KACP9M,KAAM,MAERkG,cAAe,CACbnD,SAAS,EACT+J,MAAO,KACP9M,KAAM,MAER2G,eAAgB,CACd5D,SAAS,EACT+J,MAAO,KACP9M,KAAM,OAmLKyJ,IA/KM,WAAwC,IAAvCpC,EAAsC,uDAA9B0I,EAAcC,EAAgB,uCAC1D,OAAQA,EAAOlM,MACb,KAAKiI,IAAMC,iBAAiBS,KAC1B,OAAO,2BACFpF,GADL,IAEEpE,YAAa,CACXF,SAAS,KAGf,KAAKgJ,IAAMC,iBAAiBY,KAC1B,OAAO,2BACFvF,GADL,IAEEpE,YAAa,CACXF,SAAS,EACT/C,KAAMgQ,EAAOrD,WAGnB,KAAKZ,IAAMC,iBAAiBe,KAC1B,OAAO,2BACF1F,GADL,IAEEpE,YAAa,CACXF,SAAS,EACT+J,OAAO,EACP9M,KAAM,QAGZ,KAAK+L,IAAMG,qBAAqBO,KAC9B,OAAO,2BACFpF,GADL,IAEEnE,eAAgB,CACdH,SAAS,KAGf,KAAKgJ,IAAMG,qBAAqBU,KAC9B,OAAO,2BACFvF,GADL,IAEEnE,eAAgB,CACdH,SAAS,EACT/C,KAAMgQ,EAAOrD,WAGnB,KAAKZ,IAAMG,qBAAqBa,KAC9B,OAAO,2BACF1F,GADL,IAEEnE,eAAgB,CACdH,SAAS,EACT+J,OAAO,EACP9M,KAAM,QAGZ,KAAK+L,IAAMI,uBAAuBM,KAChC,OAAO,2BACFpF,GADL,IAEExE,iBAAkB,CAChBE,SAAS,KAGf,KAAKgJ,IAAMI,uBAAuBS,KAChC,OAAO,2BACFvF,GADL,IAEExE,iBAAkB,CAChBE,SAAS,EACT/C,KAAMgQ,EAAOrD,WAGnB,KAAKZ,IAAMI,uBAAuBY,KAChC,OAAO,2BACF1F,GADL,IAEExE,iBAAkB,CAChBE,SAAS,EACT+J,OAAO,EACP9M,KAAM,QAGZ,KAAK+L,IAAMK,WAAWK,KACpB,OAAO,2BACFpF,GADL,IAEE1C,OAAQ,CACN5B,SAAS,KAGf,KAAKgJ,IAAMK,WAAWQ,KACpB,OAAO,2BACFvF,GADL,IAEE1C,OAAQ,CACN5B,SAAS,EACT/C,KAAMgQ,EAAOrD,WAGnB,KAAKZ,IAAMK,WAAWW,KACpB,OAAO,2BACF1F,GADL,IAEE1C,OAAQ,CACN5B,SAAS,EACT+J,OAAO,EACP9M,KAAMgQ,EAAOlD,SAGnB,KAAKf,IAAMM,kBAAkBI,KAC3B,OAAO,2BACFpF,GADL,IAEEzB,aAAc,CACZ7C,SAAS,KAGf,KAAKgJ,IAAMM,kBAAkBO,KAC3B,OAAO,2BACFvF,GADL,IAEEzB,aAAc,CACZ7C,SAAS,EACT/C,KAAMgQ,EAAOrD,WAGnB,KAAKZ,IAAMM,kBAAkBU,KAC3B,OAAO,2BACF1F,GADL,IAEEzB,aAAc,CACZ7C,SAAS,EACT+J,OAAO,EACP9M,KAAMgQ,EAAOlD,SAGnB,KAAKf,IAAMO,mBAAmBG,KAC5B,OAAO,2BACFpF,GADL,IAEEnB,cAAe,CACbnD,SAAS,KAGf,KAAKgJ,IAAMO,mBAAmBM,KAC5B,OAAO,2BACFvF,GADL,IAEEnB,cAAe,CACbnD,SAAS,EACT/C,KAAMgQ,EAAOrD,WAGnB,KAAKZ,IAAMO,mBAAmBS,KAC5B,OAAO,2BACF1F,GADL,IAEEnB,cAAe,CACbnD,SAAS,EACT+J,OAAO,EACP9M,KAAMgQ,EAAOlD,SAGnB,KAAKf,IAAMQ,oBAAoBE,KAC7B,OAAO,2BACFpF,GADL,IAEEV,eAAgB,CACd5D,SAAS,KAGf,KAAKgJ,IAAMQ,oBAAoBK,KAC7B,OAAO,2BACFvF,GADL,IAEEV,eAAgB,CACd5D,SAAS,EACT/C,KAAMgQ,EAAOrD,WAGnB,KAAKZ,IAAMQ,oBAAoBQ,KAC7B,OAAO,2BACF1F,GADL,IAEEV,eAAgB,CACd5D,SAAS,EACT+J,OAAO,EACP9M,KAAMgQ,EAAOlD,SAGnB,QACE,OAAOzF,K,6ECjNP0I,EAAe,CACnBjN,iBAAkB,CAChBC,SAAS,EACT+J,MAAO,KACP9M,KAAM,MAERqD,oBAAqB,CACnBN,SAAS,EACT+J,MAAO,KACP9M,KAAM,MAERoD,oBAAqB,CACnBL,SAAS,EACT+J,MAAO,KACP9M,KAAM,MAER2E,OAAQ,CACN5B,SAAS,EACT+J,MAAO,KACP9M,KAAM,MAER4F,aAAc,CACZ7C,SAAS,EACT+J,MAAO,KACP9M,KAAM,MAERkG,cAAe,CACbnD,SAAS,EACT+J,MAAO,KACP9M,KAAM,MAER2G,eAAgB,CACd5D,SAAS,EACT+J,MAAO,KACP9M,KAAM,OAmLK0J,IA/KW,WAAwC,IAAvCrC,EAAsC,uDAA9B0I,EAAcC,EAAgB,uCAC/D,OAAQA,EAAOlM,MACb,KAAKiI,IAAM6B,uBAAuBnB,KAChC,OAAO,2BACFpF,GADL,IAEEvE,iBAAkB,CAChBC,SAAS,KAGf,KAAKgJ,IAAM6B,uBAAuBhB,KAChC,OAAO,2BACFvF,GADL,IAEEvE,iBAAkB,CAChBC,SAAS,EACT/C,KAAMgQ,EAAOrD,WAGnB,KAAKZ,IAAM6B,uBAAuBb,KAChC,OAAO,2BACF1F,GADL,IAEEvE,iBAAkB,CAChBC,SAAS,EACT+J,OAAO,EACP9M,KAAMgQ,EAAOlD,SAGnB,KAAKf,IAAM8B,0BAA0BpB,KACnC,OAAO,2BACFpF,GADL,IAEEhE,oBAAqB,CACnBN,SAAS,KAGf,KAAKgJ,IAAM8B,0BAA0BjB,KACnC,OAAO,2BACFvF,GADL,IAEEhE,oBAAqB,CACnBN,SAAS,EACT/C,KAAMgQ,EAAOrD,WAGnB,KAAKZ,IAAM8B,0BAA0Bd,KACnC,OAAO,2BACF1F,GADL,IAEEhE,oBAAqB,CACnBN,SAAS,EACT+J,OAAO,EACP9M,KAAMgQ,EAAOlD,SAGnB,KAAKf,IAAM+B,wBAAwBrB,KACjC,OAAO,2BACFpF,GADL,IAEEjE,oBAAqB,CACnBL,SAAS,KAGf,KAAKgJ,IAAM+B,wBAAwBlB,KACjC,OAAO,2BACFvF,GADL,IAEEjE,oBAAqB,CACnBL,SAAS,EACT/C,KAAMgQ,EAAOrD,WAGnB,KAAKZ,IAAM+B,wBAAwBf,KACjC,OAAO,2BACF1F,GADL,IAEEjE,oBAAqB,CACnBL,SAAS,EACT+J,OAAO,EACP9M,KAAMgQ,EAAOlD,SAGnB,KAAKf,IAAMK,WAAWK,KACpB,OAAO,2BACFpF,GADL,IAEE1C,OAAQ,CACN5B,SAAS,KAGf,KAAKgJ,IAAMK,WAAWQ,KACpB,OAAO,2BACFvF,GADL,IAEE1C,OAAQ,CACN5B,SAAS,EACT/C,KAAMgQ,EAAOrD,WAGnB,KAAKZ,IAAMK,WAAWW,KACpB,OAAO,2BACF1F,GADL,IAEE1C,OAAQ,CACN5B,SAAS,EACT+J,OAAO,EACP9M,KAAMgQ,EAAOlD,SAGnB,KAAKf,IAAMM,kBAAkBI,KAC3B,OAAO,2BACFpF,GADL,IAEEzB,aAAc,CACZ7C,SAAS,KAGf,KAAKgJ,IAAMM,kBAAkBO,KAC3B,OAAO,2BACFvF,GADL,IAEEzB,aAAc,CACZ7C,SAAS,EACT/C,KAAMgQ,EAAOrD,WAGnB,KAAKZ,IAAMM,kBAAkBU,KAC3B,OAAO,2BACF1F,GADL,IAEEzB,aAAc,CACZ7C,SAAS,EACT+J,OAAO,EACP9M,KAAMgQ,EAAOlD,SAGnB,KAAKf,IAAMO,mBAAmBG,KAC5B,OAAO,2BACFpF,GADL,IAEEnB,cAAe,CACbnD,SAAS,KAGf,KAAKgJ,IAAMO,mBAAmBM,KAC5B,OAAO,2BACFvF,GADL,IAEEnB,cAAe,CACbnD,SAAS,EACT/C,KAAMgQ,EAAOrD,WAGnB,KAAKZ,IAAMO,mBAAmBS,KAC5B,OAAO,2BACF1F,GADL,IAEEnB,cAAe,CACbnD,SAAS,EACT+J,OAAO,EACP9M,KAAMgQ,EAAOlD,SAGnB,KAAKf,IAAMQ,oBAAoBE,KAC7B,OAAO,2BACFpF,GADL,IAEEV,eAAgB,CACd5D,SAAS,KAGf,KAAKgJ,IAAMQ,oBAAoBK,KAC7B,OAAO,2BACFvF,GADL,IAEEV,eAAgB,CACd5D,SAAS,EACT/C,KAAMgQ,EAAOrD,WAGnB,KAAKZ,IAAMQ,oBAAoBQ,KAC7B,OAAO,2BACF1F,GADL,IAEEV,eAAgB,CACd5D,SAAS,EACT+J,OAAO,EACP9M,KAAMgQ,EAAOlD,SAGnB,QACE,OAAOzF,K,6ECjNP0I,EAAe,CACnB5L,OAAQ,CACNpB,SAAS,EACT+J,MAAO,KACP9M,KAAM,MAERoE,YAAa,CACXrB,SAAS,EACT+J,MAAO,KACP9M,KAAM,OA2DKiQ,IAvDO,WAAwC,IAAvC5I,EAAsC,uDAA9B0I,EAAcC,EAAgB,uCAC3D,OAAQA,EAAOlM,MACb,KAAKiI,IAAMyD,WAAW/C,KACpB,OAAO,2BACFpF,GADL,IAEElD,OAAQ,CACNpB,SAAS,KAGf,KAAKgJ,IAAMyD,WAAW5C,KACpB,OAAO,2BACFvF,GADL,IAEElD,OAAQ,CACNpB,SAAS,EACT/C,KAAMgQ,EAAOrD,WAGnB,KAAKZ,IAAMyD,WAAWzC,KACpB,OAAO,2BACF1F,GADL,IAEElD,OAAQ,CACNpB,SAAS,EACT+J,OAAO,EACP9M,KAAM,QAGZ,KAAK+L,IAAM0D,gBAAgBhD,KACzB,OAAO,2BACFpF,GADL,IAEEjD,YAAa,CACXrB,SAAS,KAGf,KAAKgJ,IAAM0D,gBAAgB7C,KACzB,OAAO,2BACFvF,GADL,IAEEjD,YAAa,CACXrB,SAAS,EACT/C,KAAMgQ,EAAOrD,WAGnB,KAAKZ,IAAM0D,gBAAgB1C,KACzB,OAAO,2BACF1F,GADL,IAEEjD,YAAa,CACXrB,SAAS,EACT+J,OAAO,EACP9M,KAAM,QAGZ,QACE,OAAOqH,K,gIC7DA6I,EAAiB,kBAC5B7B,IAAOW,IAAP,uBAWWmB,EAAoB,kBAC/B9B,IAAOW,IAAP,oBAGWoB,EAAsB,kBACjC/B,IAAOW,IAAP,sBAIWqB,EAAiB,SAAC/P,GAAD,OAC5B+N,IAAOW,IAAP,gBAAoB1O,KAGTgQ,EAAiB,SAAChQ,GAAD,OAC5B+N,IAAOW,IAAP,gBAAoB1O,EAApB,aAGWiQ,EAAkB,SAACjQ,GAAD,OAC7B+N,IAAOW,IAAP,gBAAoB1O,EAApB,cAGWkQ,EAAkB,SAAClQ,GAAD,OAC7B+N,IAAOW,IAAP,gBAAoB1O,EAApB,c,mBCzBQmQ,G,WASAC,G,WASAC,G,WASAC,G,WASAC,G,WASAC,G,WASAC,G,WASOjH,GA/DjB,SAAU2G,IAAV,yEAEqB,OAFrB,kBAE2BO,YAAKd,GAFhC,OAGI,OAHJ,SAEYlQ,EAFZ,EAEYA,KAFZ,SAGUmP,YAAI3C,IAAQE,sBAAsB1M,IAH5C,8BAKI,OALJ,mCAKUmP,YAAI3C,IAAQK,sBAAR,OALd,qDASA,SAAU6D,IAAV,yEAEqB,OAFrB,kBAE2BM,YAAKb,GAFhC,OAGI,OAHJ,SAEYnQ,EAFZ,EAEYA,KAFZ,SAGUmP,YAAI3C,IAAQQ,yBAAyBhN,IAH/C,8BAKI,OALJ,mCAKUmP,YAAI3C,IAAQS,yBAAR,OALd,qDASA,SAAU0D,IAAV,yEAEqB,OAFrB,kBAE2BK,YAAKZ,GAFhC,OAGI,OAHJ,SAEYpQ,EAFZ,EAEYA,KAFZ,SAGUmP,YAAI3C,IAAQU,2BAA2BlN,IAHjD,8BAKI,OALJ,mCAKUmP,YAAI3C,IAAQW,2BAAR,OALd,qDASA,SAAUyD,EAAcZ,GAAxB,yEAEqB,OAFrB,kBAE2BgB,YAAKX,EAAgBL,EAAO1P,IAFvD,OAGI,OAHJ,SAEYN,EAFZ,EAEYA,KAFZ,SAGUmP,YAAI3C,IAAQY,iBAAiBpN,IAHvC,8BAKI,OALJ,mCAKUmP,YAAI3C,IAAQa,iBAAR,OALd,qDASA,SAAUwD,EAAoBb,GAA9B,yEAEqB,OAFrB,kBAE2BgB,YAAKV,EAAgBN,EAAO1P,IAFvD,OAGI,OAHJ,SAEYN,EAFZ,EAEYA,KAFZ,SAGUmP,YAAI3C,IAAQc,uBAAuBtN,IAH7C,8BAKI,OALJ,mCAKUmP,YAAI3C,IAAQe,uBAAR,OALd,qDASA,SAAUuD,EAAqBd,GAA/B,yEAEqB,OAFrB,kBAE2BgB,YAAKT,EAAiBP,EAAO1P,IAFxD,OAGI,OAHJ,SAEYN,EAFZ,EAEYA,KAFZ,SAGUmP,YAAI3C,IAAQgB,wBAAwBxN,IAH9C,8BAKI,OALJ,mCAKUmP,YAAI3C,IAAQiB,wBAAR,OALd,qDASA,SAAUsD,EAAqBf,GAA/B,yEAEqB,OAFrB,kBAE2BgB,YAAKR,EAAiBR,EAAO1P,IAFxD,OAGI,OAHJ,SAEYN,EAFZ,EAEYA,KAFZ,SAGUmP,YAAI3C,IAAQkB,yBAAyB1N,IAH/C,8BAKI,OALJ,mCAKUmP,YAAI3C,IAAQmB,yBAAR,OALd,qDASO,SAAU7D,IAAV,iEACL,OADK,SACCmH,YAAUlF,IAAMC,iBAAiBS,KAAUgE,GAD5C,OAEL,OAFK,SAECQ,YAAUlF,IAAMG,qBAAqBO,KAAUiE,GAFhD,OAGL,OAHK,SAGCO,YAAUlF,IAAMI,uBAAuBM,KAAUkE,GAHlD,OAIL,OAJK,SAICM,YAAUlF,IAAMK,WAAWK,KAAUmE,GAJtC,OAKL,OALK,UAKCK,YAAUlF,IAAMM,kBAAkBI,KAAUoE,GAL7C,QAML,OANK,UAMCI,YAAUlF,IAAMO,mBAAmBG,KAAUqE,GAN9C,QAOL,OAPK,UAOCG,YAAUlF,IAAMQ,oBAAoBE,KAAUsE,GAP/C,0C,6GCvEMG,EAAa,kBACxB7C,IAAOW,IAAP,kBAGWmC,EAAe,kBAC1B9C,IAAOW,IAAP,eAGWoC,EAAgB,kBAC3B/C,IAAOW,IAAP,iBAIWqC,EAAc,SAAC/Q,GAAD,OACzB+N,IAAOW,IAAP,aAAiB1O,KAGNgR,EAAc,SAAChR,GAAD,OACzB+N,IAAOW,IAAP,aAAiB1O,EAAjB,aAGWiR,EAAe,SAACjR,GAAD,OAC1B+N,IAAOW,IAAP,aAAiB1O,EAAjB,cAGWkR,EAAe,SAAClR,GAAD,OAC1B+N,IAAOW,IAAP,aAAiB1O,EAAjB,c,mBCnBQmR,G,WASAC,G,WASAC,G,WASAf,G,WAQAC,G,WASAC,G,WASAC,G,WASOhH,GA9DjB,SAAU0H,EAAwBzB,GAAlC,yEAEqB,OAFrB,kBAE2BgB,YAAKE,GAFhC,OAGI,OAHJ,SAEYlR,EAFZ,EAEYA,KAFZ,SAGUmP,YAAI3C,IAAQuB,2BAA2B/N,IAHjD,8BAKI,OALJ,mCAKUmP,YAAI3C,IAAQwB,2BAAR,OALd,qDASA,SAAU0D,EAA2B1B,GAArC,yEAEqB,OAFrB,kBAE2BgB,YAAKI,GAFhC,OAGI,OAHJ,SAEYpR,EAFZ,EAEYA,KAFZ,SAGUmP,YAAI3C,IAAQyB,8BAA8BjO,IAHpD,8BAKI,OALJ,mCAKUmP,YAAI3C,IAAQ0B,8BAAR,OALd,qDASA,SAAUyD,EAA2B3B,GAArC,yEAEqB,OAFrB,kBAE2BgB,YAAKG,GAFhC,OAGI,OAHJ,SAEYnR,EAFZ,EAEYA,KAFZ,SAGUmP,YAAI3C,IAAQ2B,8BAA8BnO,IAHpD,8BAKI,OALJ,mCAKUmP,YAAI3C,IAAQ4B,8BAAR,OALd,qDASA,SAAUwC,EAAcZ,GAAxB,yEAEqB,OAFrB,kBAE2BgB,YAAKK,EAAarB,EAAO1P,IAFpD,OAGI,OAHJ,SAEYN,EAFZ,EAEYA,KAFZ,SAGUmP,YAAI3C,IAAQY,iBAAiBpN,IAHvC,8BAKI,OALJ,mCAKUmP,YAAI3C,IAAQa,iBAAR,OALd,qDAQA,SAAUwD,EAAoBb,GAA9B,yEAEqB,OAFrB,kBAE2BgB,YAAKM,EAAatB,EAAO1P,IAFpD,OAGI,OAHJ,SAEYN,EAFZ,EAEYA,KAFZ,SAGUmP,YAAI3C,IAAQc,uBAAuBtN,IAH7C,8BAKI,OALJ,mCAKUmP,YAAI3C,IAAQe,uBAAR,OALd,qDASA,SAAUuD,EAAqBd,GAA/B,yEAEqB,OAFrB,kBAE2BgB,YAAKO,EAAcvB,EAAO1P,IAFrD,OAGI,OAHJ,SAEYN,EAFZ,EAEYA,KAFZ,SAGUmP,YAAI3C,IAAQgB,wBAAwBxN,IAH9C,8BAKI,OALJ,mCAKUmP,YAAI3C,IAAQiB,wBAAR,OALd,qDASA,SAAUsD,EAAqBf,GAA/B,yEAEqB,OAFrB,kBAE2BgB,YAAKQ,EAAcxB,EAAO1P,IAFrD,OAGI,OAHJ,SAEYN,EAFZ,EAEYA,KAFZ,SAGUmP,YAAI3C,IAAQkB,yBAAyB1N,IAH/C,8BAKI,OALJ,mCAKUmP,YAAI3C,IAAQmB,yBAAR,OALd,qDASO,SAAU5D,IAAV,iEACL,OADK,SACCkH,YAAUlF,IAAM6B,uBAAuBnB,KAAUgF,GADlD,OAEL,OAFK,SAECR,YAAUlF,IAAM8B,0BAA0BpB,KAAUiF,GAFrD,OAGL,OAHK,SAGCT,YAAUlF,IAAM+B,wBAAwBrB,KAAUkF,GAHnD,OAIL,OAJK,SAICV,YAAUlF,IAAMK,WAAWK,KAAUmE,GAJtC,OAKL,OALK,UAKCK,YAAUlF,IAAMM,kBAAkBI,KAAUoE,GAL7C,QAML,OANK,UAMCI,YAAUlF,IAAMO,mBAAmBG,KAAUqE,GAN9C,QAOL,OAPK,UAOCG,YAAUlF,IAAMQ,oBAAoBE,KAAUsE,GAP/C,0C,6GC1EMa,EAAkB,SAAClC,GAAD,OAC7BrB,IAAOW,IAAP,uBAA2BU,KAGhBmC,EAAuB,SAACnC,GAAD,OAClCrB,IAAOW,IAAP,oBAAwBU,K,mBCGhBoC,G,WASAC,G,WASO/H,GAlBjB,SAAU8H,EAAc9B,GAAxB,yEAEqB,OAFrB,kBAE2BgB,YAAKY,EAAiB5B,EAAON,aAFxD,OAGI,OAHJ,SAEY1P,EAFZ,EAEYA,KAFZ,SAGUmP,YAAI3C,IAAQmD,iBAAiB3P,IAHvC,8BAKI,OALJ,mCAKUmP,YAAI3C,IAAQoD,iBAAR,OALd,qDASA,SAAUmC,EAAmB/B,GAA7B,yEAEqB,OAFrB,kBAE2BgB,YAAKa,EAAsB7B,EAAON,aAF7D,OAGI,OAHJ,SAEY1P,EAFZ,EAEYA,KAFZ,SAGUmP,YAAI3C,IAAQqD,sBAAsB7P,IAH5C,8BAKI,OALJ,mCAKUmP,YAAI3C,IAAQsD,sBAAR,OALd,qDASO,SAAU9F,IAAV,iEACL,OADK,SACCiH,YAAUlF,IAAMyD,WAAW/C,KAAUqF,GADtC,OAEL,OAFK,SAECb,YAAUlF,IAAM0D,gBAAgBhD,KAAUsF,GAF3C,0C","file":"static/js/main.ee147155.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from 'styled-components';\n\ninterface Props {\n  children?: React.ReactNode;\n  footer?: React.ReactNode;\n  header?: React.ReactNode;\n  slider?: React.ReactNode;\n}\n\nconst MainTemplate: React.FC<Props> = ({ children, footer, header, slider }) => (\n  <Containter className=\"page-template\">\n    <Header>{header}</Header>\n    {slider && <Slider>{slider}</Slider>}\n    <Section>{children}</Section>\n    <Footer>{footer}</Footer>\n  </Containter>\n);\n\nconst Containter = styled.div`\n  margin: auto;\n  width: 100%;\n  display: grid;\n  grid-template-rows: 70px auto auto 50px;\n  grid-template-columns: 1fr minmax(auto, 800px) 1fr;\n  grid-template-areas:\n  \"header header header\"\n  \"slider slider slider\"\n  \"section section section\"\n  \"footer footer footer\"; \n`\n\nconst Header = styled.header`\n  width: 100%;\n  height: 100%;\n  margin: auto;\n  grid-area: header;\n`\nconst Slider = styled.section`\n  width: 100%;\n  height: auto;\n  grid-area: slider;\n  margin: auto;\n`\nconst Section = styled.section`\n  width: calc(100% - 100px);\n  height: auto;\n  grid-area: section;\n  margin: auto;\n  @media screen and (max-width: 480px) {\n    width: 100%;\n  }\n`\nconst Footer = styled.footer`\n  width: 100%;\n  height: 100%;\n  grid-area: footer;\n  margin: auto;\n`\nexport default MainTemplate; ","import React from \"react\";\nimport styled from 'styled-components';\n\nconst Footer: React.FC = () => (\n  <Containter>\n    <span>© COPYRIGHT 2021 oktrees API Powered by TMDB</span>\n  </Containter>\n);\n\nconst Containter = styled.div`\n  width: 100%;\n  height: 100%;\n  grid-area: footer;\n  color: #ccc;\n  font-size: 12px;\n  display: flex;\n  margin-top: 40px;\n  justify-content: center;\n  align-items: center;\n  box-shadow: rgba(0, 0, 0, 0.5) 5px 1px 5px 2px;\n`\n\nexport default Footer;\n","import React from \"react\";\nimport styled from 'styled-components';\nimport { Link } from \"react-router-dom\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Navigation } from \"swiper\";\nimport 'swiper/swiper-bundle.css';\n\nimport { Image } from 'components/common';\n\nSwiperCore.use([Navigation]);\n\ninterface Props {\n  listArr: any;\n  keyword: string;\n}\n\nconst List: React.FC<Props> = ({ listArr, keyword }) => {\n  const onMouseEnterImg = (e:any) => {\n    e.target.closest('.hoverBox').style.opacity = 1        \n  }\n  const onMouseLeaveImg = (e:any) => {\n    e.target.closest('.hoverBox').style.opacity = 0     \n  }\n  \n  return (\n    <Container>\n      <Swiper\n        navigation\n        breakpoints={{\n          480: {\n            width: 480,\n            slidesPerView: 1,\n            centeredSlides: true,\n          },\n          481: {\n            width: 481,\n            slidesPerView: \"auto\",\n          },\n        }}\n      > \n        {listArr.data.results.map((result: any, i: number) => (\n          <SwiperSlide key={i} className=\"swiperBox\">\n            <Link to={`/${keyword}/${result.id}`}>\n              <HoverBox\n                className=\"hoverBox\"\n                onMouseEnter={onMouseEnterImg}\n                onMouseLeave={onMouseLeaveImg}\n              >\n                <div></div>\n                <div>상세보기</div>\n                <div><span>★</span> {result.vote_average} / 10</div>\n              </HoverBox> \n              <Image \n                src={result.poster_path} \n                alt=\"contentsImg\" \n                width=\"200\" \n                height=\"300\"\n              />\n            </Link>\n            <Title>{keyword === 'movie' ? result.title : result.name}</Title>\n          </SwiperSlide>\n        ))}\n      </Swiper>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  width: 100%;\n    .swiper-slide {\n      width: 200px;\n      margin-right: 50px;\n    }\n  @media screen and (max-width: 480px) {\n    .swiper-container {\n    }\n    .swiper-slide {\n      margin-right: 0px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n  }\n`\n\nconst HoverBox = styled.div`\n  width: 200px;\n  height: 300px;\n  border: 1px solid #eee;\n  color: #eee;\n  position: absolute;\n  z-index: 1;\n  border-radius: 5px;\n  background-color: rgba(0, 0, 0, 0.7);\n  opacity: 0;\n  transition: opacity 0.1s ease-in-out 0s;\n  padding: 5px;\n  flex-direction: column;\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  div:nth-child(1) {\n    align-self: flex-start;\n  }\n  div:nth-child(2) {\n    align-self: center;\n  }\n  div:nth-child(3) {\n    align-self: flex-end;\n    span {\n      color: #FFFF76;\n    }\n  }\n  img { \n    border-radius: 5px;\n  }\n`\nconst Title = styled.div`\n  color: #eee;\n  margin-top: 10px;\n  font-size: 16px; \n    \n`\n\n\nexport default List; ","import React from \"react\";\nimport styled from 'styled-components';\n\ninterface Props {\n  src: string;\n  alt: string;\n  width: string;\n  height: string;\n}\n\nconst Image: React.FC<Props> = ({ src, alt, width, height }) => {\n  const onErrorImg = (e: any) => {\n    e.target.src = \"/images/noImage.png\"\n    e.target.width= 100\n    e.target.height= 130\n    e.target.align= \"center\"\n    console.log(src);\n  }\n  return (\n    <Container width={width} height={height} src={src}>\n      <img src={\n        src ? `https://image.tmdb.org/t/p/w${width}/${src}` : \"/images/noImage.png\"} \n        width={src || 100}\n        alt={alt} \n        onError={onErrorImg}\n      />\n    </Container>\n  )\n}\n\ntype ContainerType = {\n  width: string;\n  height: string;\n  src: string;\n};\n\nconst Container = styled.div<ContainerType>`\n  width: ${(props) => props.width + 'px'};\n  height: ${(props) => props.height + 'px'};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  img {\n    border-radius: 5px;\n  }\n`\n\nexport default Image; ","import React from \"react\";\nimport styled from 'styled-components';\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Navigation } from \"swiper\";\nimport 'swiper/swiper-bundle.css';\n\nimport { ImageBack } from 'components/common';\n\nSwiperCore.use([Navigation]);\n\ninterface Props {\n  list: any,\n  keyword: any,\n}\n\nconst MainSwiper: React.FC<Props> = ({\n  list,\n  keyword\n}) => ( \n  <Container>\n    <Swiper\n    navigation\n    slidesPerView={1}\n    >         \n      {list?.data?.results && list?.data?.results.map((result: any, i: number) => (          \n        <SwiperSlide key={i}>\n          <ImageBack \n            src={result.backdrop_path} \n            id={result.id}\n            title={result.title}\n            date={result.release_date}\n            voteAverage={result.vote_average}\n            overview={result.overview}\n          />\n        </SwiperSlide>\n      ))}\n    </Swiper>\n  </Container>\n)\n\nconst Container = styled.div`\n  width: 100%;\n  height: calc(100vh - 70px);\n  color: white; \n`\nexport default MainSwiper;","import React from \"react\";\nimport styled from 'styled-components';\nimport { Link } from \"react-router-dom\";\n\ninterface Props {\n  src: string;\n  id: number;\n  title: string;\n  date : string;\n  voteAverage: string;\n  overview: string;\n}\n\nconst ImageBack: React.FC<Props> = ({ \n  src,\n  id,\n  title,\n  date,\n  voteAverage,\n  overview\n}) => {\n  return (\n    <Container src={src}>\n      <div className=\"imgBack\" >\n        <Header>현재 상영중</Header>\n        <Contents>\n          <div className=\"img-contents-left\">\n            <div>{title}</div>\n            <div>{date} · 평점 {voteAverage}</div>\n            <div><Link to={`/movie/${id}`}>상세보기</Link></div>\n          </div>\n          <div className=\"img-contents-right\">\n            <div>{overview}</div>\n          </div>\n        </Contents>\n      </div>\n    </Container>\n  )\n}\n\ntype ContainerType = {\n  src: string;\n};\n\nconst Container = styled.div<ContainerType>`\n  width: 100%;\n  height: calc(100vh - 70px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-shadow: rgb(0, 0, 0) 0px 0px 4px;\n  .imgBack {\n    width: 100%;\n    height: 100%;\n    background-image: url(${(props) => \"https://image.tmdb.org/t/p/original\" + props.src});\n    background-position: center center;\n    background-size: cover;\n  }\n  @media screen and (max-width: 480px) {\n    .img-contents-right {\n      display: none;\n    }\n  } \n`\nconst Header = styled.div`\n  width: 90vw;\n  height: 20vh;\n  padding-top: 10vh;\n  padding-left: 10vw;\n  font-size: 50px;\n  font-weight: 600;\n  @media screen and (max-width: 480px) {\n    font-size: 40px;\n  } \n`\nconst Contents = styled.div`\n  width: 90vw;\n  height: 20vh;\n  padding-top: 40vh;\n  padding-left: 10vw;\n  display: flex;\n  justify-content: space-between;\n  .img-contents-left {\n    div:nth-child(1) {\n      font-size: 40px;\n      @media screen and (max-width: 480px) {\n        font-size: 30px;\n      } \n    }\n    div:nth-child(2) {\n      font-size: 30px;\n      font-weight: 200;\n      color: #eee;\n      margin-top: 10px;\n      @media screen and (max-width: 480px) {\n        font-size: 20px;\n      } \n    }\n    div:nth-child(3) {\n      font-weight: 400;\n      font-size: 24px;\n      margin-top: 15px;\n      text-decoration: underline;\n    }\n  }\n  .img-contents-right {\n    width: 35vw;\n    height: 15vh;\n    line-height: 22px;\n    div {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      display: -webkit-box;\n      -webkit-line-clamp: 6;\n      -webkit-box-orient: vertical;\n    }\n  }\n  @media screen and (max-width: 480px) {\n    padding-top: 45vh;\n  } \n \n`\n\nexport default ImageBack; ","import React, { useEffect } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\n\nfunction Loading() {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  })\n  \n  return (\n    <Container>\n      <LoadingCircle strokeDasharray={251}>\n        <circle cx=\"50%\" cy=\"50%\" r=\"40\"></circle>\n      </LoadingCircle>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst circleRotateAnimation = keyframes`\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst strokeOffsetAnimation = keyframes`\n  0% {\n    stroke-dashoffset: 0\n  }\n  75% {\n    stroke-dashoffset: -240\n  }\n  100% {\n    stroke-dashoffset: -251\n  }\n`;\n\nconst LoadingCircle = styled.svg`\n  width: 90px;\n  height: 90px;\n  animation: ${circleRotateAnimation} 2s infinite;\n  circle {\n    stroke: #000;\n    stroke-width: 10;\n    fill: none;\n    animation: ${strokeOffsetAnimation} 1s infinite;\n  }\n`;\nexport default Loading;","import React from \"react\";\nimport styled from 'styled-components';\n\nimport { List, Loading } from 'components/common'\nimport { MovieType } from \"store/movie/types\";\nimport { TelevisionType } from \"store/television/types\";\n\ninterface Props {\n  nowPlayingMovies: MovieType;\n  onAirTelevisions: TelevisionType;\n}\n\nconst Home: React.FC<Props> = ({\n  nowPlayingMovies,\n  onAirTelevisions,\n}) => (  \n  <Container>\n    {(nowPlayingMovies.loading || onAirTelevisions.loading) && <Loading />}\n    <h2>상영중인 영화</h2>\n    {nowPlayingMovies?.data?.results[0] && \n      <List \n        listArr={nowPlayingMovies} \n        keyword=\"movie\"\n    />}\n\n    <h2>방영중인 프로그램</h2>\n    {onAirTelevisions?.data?.results[0] && \n      <List \n        listArr={onAirTelevisions} \n        keyword=\"tv\" \n    />}\n  </Container>\n)\n\nconst Container = styled.div`\n  width: auto;\n  color: white; \n  h2 {\n    margin-top: 40px;\n    margin-bottom: 15px;\n    font-size: 28px;\n    border-left: 3px solid rgba(255,0,0,0.7);\n    padding-left:10px;\n  }\n  @media screen and (max-width: 480px) {\n    h2 {\n      margin-left: 5vw;\n    }\n  }  \n`\nexport default Home;","import React from \"react\";\nimport styled from 'styled-components';\n\nimport { List, Loading } from 'components/common'\nimport { MovieType } from \"store/movie/types\";\n\ninterface Props {\n  trendMovies: MovieType,\n  topRatedMovies: MovieType,\n}\n\nconst Movie: React.FC<Props> = ({\n  trendMovies,\n  topRatedMovies\n}) => ( \n  <Container>\n    {(trendMovies.loading || topRatedMovies.loading) && <Loading />}\n    <h2>인기영화</h2>\n    {trendMovies?.data?.results[0] && <List listArr={trendMovies} keyword=\"movie\" />}\n    \n    <h2>평점높은영화</h2>\n    {topRatedMovies?.data?.results[0] && <List listArr={topRatedMovies} keyword=\"movie\" />}\n  </Container>\n)\n\nconst Container = styled.div`\n  width: auto;\n  color: white; \n  h2 {\n    margin-top: 40px;\n    margin-bottom: 15px;\n    font-size: 28px;\n    border-left: 3px solid rgba(255,0,0,0.7);\n    padding-left:10px;\n  }\n  @media screen and (max-width: 480px) {\n    h2 {\n      margin-left: 5vw;\n    }\n  }  \n`\nexport default Movie;","import React from \"react\";\nimport styled from 'styled-components';\n\nimport { List, Loading } from 'components/common'\nimport { TelevisionType } from \"store/television/types\";\n\ninterface Props {\n  popualarTelevisions: TelevisionType,\n  topRatedTelevisions: TelevisionType,\n}\n\nconst Television: React.FC<Props> = ({\n  popualarTelevisions,\n  topRatedTelevisions\n}) => (\n  <Container>\n    {(popualarTelevisions.loading || topRatedTelevisions.loading) && <Loading />}\n\n    <h2>인기 프로그램</h2>\n    {popualarTelevisions?.data?.results[0] && <List listArr={popualarTelevisions} keyword=\"tv\" />}\n\n    <h2>평점높은 프로그램</h2>  \n    {topRatedTelevisions?.data?.results[0] && <List listArr={topRatedTelevisions} keyword=\"tv\" />}\n  </Container>\n)\n\nconst Container = styled.div`\n  width: auto;\n  color: white; \n  h2 {\n    margin-top: 40px;\n    margin-bottom: 15px;\n    font-size: 28px;\n    border-left: 3px solid rgba(255,0,0,0.7);\n    padding-left:10px;\n  }\n  @media screen and (max-width: 480px) {\n    h2 {\n      margin-left: 5vw;\n    }\n  }  \n`\n\nexport default Television;","import React, { useState } from \"react\";\nimport styled from 'styled-components';\n\ninterface Props {\n  searchDispatch: any;\n}\n\nconst Input: React.FC<Props> = ({ searchDispatch }) => {\n  const [searchParam, setSearchParam] = useState(\"\");\n\n  const onSubmitForm = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    searchDispatch(searchParam);\n  }\n  const onChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchParam(e.target.value);\n  }\n\n  return (\n    <Container onSubmit={onSubmitForm}>   \n      <input type=\"text\" onChange={onChangeInput} value={searchParam} placeholder=\"검색어를 입력해주세요...\"/>\n    </Container>\n  )\n}\n\nconst Container = styled.form`\n  input {\n    color: #eee;\n    border-color: #222;\n    width: 300px;\n    height: 50px;\n    font-size: 26px;\n    margin-top: 10px; \n    background-color: #222;\n  }\n  input::placeholder {\n    color: #eee;\n  }\n`\n\nexport default Input;","import React from \"react\";\nimport styled from 'styled-components';\n\nimport { List, Loading } from 'components/common'\nimport { SearchType } from \"store/search/types\";\nimport { Input } from \"./form\"\n\ninterface Props {\n  movies: SearchType;\n  televisions: SearchType;\n  searchDispatch: any;\n}\n\nconst Search: React.FC<Props> = ({\n  movies,\n  televisions,\n  searchDispatch\n}) => (\n  <Container>\n    {(movies.loading || televisions.loading) && <Loading />}\n    <Input searchDispatch={searchDispatch}/>\n    {movies?.data?.results[0] && \n      <>\n        <h2>movie 카테고리</h2>\n        <List listArr={movies} keyword=\"movie\" />\n      </>\n    }\n    \n    {televisions?.data?.results[0] &&\n    <>\n      <h2>tv 카테고리</h2>\n      <List listArr={televisions} keyword=\"tv\" />\n    </> }\n  </Container>\n)\n\nconst Container = styled.div`\n  width: auto;\n  min-height: calc(100vh - 120px);\n  color: white; \n  h2 {\n    margin-top: 40px;\n    margin-bottom: 15px;\n    font-size: 28px;\n    border-left: 3px solid rgba(255,0,0,0.7);\n    padding-left:10px;\n  }\n  @media screen and (max-width: 480px) {\n    h2 {\n      margin-left: 5vw;\n    }\n  }  \n`\n\nexport default Search;","import React from \"react\";\nimport styled from 'styled-components';\n\nimport { Image } from 'components/common';\n\ninterface Props {\n  detail: any\n  isMovie: boolean;\n}\n\nconst DetailInfo: React.FC<Props> = ({\n  detail,\n  isMovie\n}) => (\n  <Containter>   \n    <BackImg imgUrl={detail?.data && detail.data.backdrop_path}></BackImg>   \n    <ImgBox>\n      <Image \n        src={detail.data.poster_path}         \n        alt=\"posterImg\" \n        width=\"300\" \n        height=\"450\"\n      />\n    </ImgBox>\n    <Info>\n      <h1>\n        {isMovie ? detail.data.title : detail.data.name}\n      </h1>\n      <div className=\"originName\">\n        {isMovie ? detail.data.original_title : detail.data.original_name}\n      </div>\n      <InfoBox>\n        <ul>          \n          <li>\n            <span>              \n              {isMovie ? \"개봉\" : \"방영\"}\n            </span>\n              {isMovie ? detail.data.release_date : \n                (detail?.data?.next_episode_to_air?.air_date ? \n                  detail.data.next_episode_to_air.air_date :\n                  detail.data.last_air_date\n                )\n              }\n          </li>\n          <li>\n            <span>\n            {isMovie ? \"시간\" : \"시즌\" }\n            </span> \n            {isMovie ? \n              detail.data.runtime+\"분\" : \n              detail.data.number_of_seasons + \" \" + \n              (detail.data?.next_episode_to_air?.episode_number ? \n                detail.data?.next_episode_to_air?.episode_number + \"화\" :\n                detail.data?.last_episode_to_air?.episode_number + \"화\" \n              )}\n          </li>\n          <li>\n            <span>평점</span> \n            {detail.data.vote_average}\n          </li>\n          <li>\n            <span>장르</span>\n            {detail.data.genres.map((val: any) => val.name).join(' · ')}\n          </li>\n          <li>\n            <span>국가</span>\n            {detail.data.production_countries[0]?.name}\n          </li>\n        </ul>\n        <div>{detail.data.overview}</div>        \n      </InfoBox>\n    </Info>\n  </Containter>\n)\n\ntype activeType = {\n  imgUrl: string;\n};\n\nconst Containter = styled.div`\n  margin: auto;\n  margin-top: 50px;\n  width: 100%;\n  color: white;\n  display: flex;\n  gap: 70px; \n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n    align-items: center;\n  }  \n  @media screen and (max-width: 480px) {\n\n  }  \n`\nconst BackImg = styled.div<activeType>`\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props?.imgUrl ? \"https://image.tmdb.org/t/p/original/\" + props.imgUrl : null});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: -1;\n`\nconst ImgBox = styled.div`\n  grid-area: img;\n`\nconst Info = styled.div`\n  width: 100%;\n  height: 100%;\n  grid-area: info;\n  h1 {\n    font-size: 48px;  \n  }\n  .originName {\n    margin-top: 13px;\n    margin-left: 10px;\n    font-size: 16px;\n    color: #ccc;\n  }\n  @media screen and (max-width: 480px) {\n    h1 {\n      font-size: 32px;  \n      margin-left: 5vw;\n    }\n    .originName {\n      font-size: 14px;\n      margin-left: 5vw;\n    }\n  }  \n\n`\nconst InfoBox = styled.div`\n  width: 100%;\n  height: 100%;\n  min-height: 450px;\n  margin-top: 20px;\n  border-radius: 10px;\n  padding: 30px;\n  background-color: rgba(0, 0, 0, 0.5);\n  line-height: 25px;\n  color: #eee;\n  ul {\n    border-left: 3px solid rgba(255, 220, 220, 0.6);\n    border-radius: 3px;\n    padding-left: 10px;\n    margin-bottom: 30px;\n    li {\n      margin-bottom: 3px;\n      span {\n        color: #ccc;\n        margin-right: 10px;\n      }\n    }\n  }\n\n  @media screen and (max-width: 480px) {\n    font-size: 14px;\n    width: 90vw;\n    margin-left: 5vw;\n  }\n`\n\nexport default DetailInfo;","import React from \"react\";\nimport styled from 'styled-components';\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Navigation } from \"swiper\";\nimport 'swiper/swiper-bundle.css';\n\nSwiperCore.use([Navigation]);\n\ninterface Props {\n  detailVideos: any;\n  isMovie: boolean;\n}\n\nconst DetailVideos: React.FC<Props> = ({\n  detailVideos,\n  isMovie\n}) => (\n  <Container>   \n    <h2>{detailVideos?.data?.results[0] && \"관련영상\"}</h2>\n    <Swiper\n    navigation\n    spaceBetween={50}\n    breakpoints={{\n      480: {\n        width: 480,\n        slidesPerView: 1,\n        centeredSlides: true,\n      },\n      481: {\n        width: 481,\n        slidesPerView: \"auto\",\n      },\n    }}\n    >\n      {detailVideos.data.results.map((result: any, i: number) => (\n        <SwiperSlide key={i}>\n          <a href={`https://www.youtube.com/watch?v=${result.key}`} target=\"_blank\" rel=\"noopener noreferrer\" >\n            <img src={`https://img.youtube.com/vi/${result.key}/0.jpg`} alt=\"contentsImg\" width=\"100%\" />        \n          </a>\n          <VideoName>{result.name}</VideoName>\n        </SwiperSlide>\n      ))}\n    </Swiper>\n    \n  </Container>\n)\n\nconst Container = styled.div`\n  margin-top: 70px;\n  color:white;\n  h2 { \n    font-size: 24px;\n    margin-bottom: 20px;\n    font-weight: 600;\n    border-left: 3px solid rgba(255,0,0,0.7);\n    padding-left:10px;\n  }\n  .swiper-slide {\n    width: 200px;\n  }\n\n  @media screen and (max-width: 480px) {\n    // font-size: 14px;\n\n    h2 { \n      margin-left: 5vw;\n    }    \n  }\n`\nconst VideoName = styled.div`\n  margin-top: 10px;\n  font-size: 14px;\n`\n\nexport default DetailVideos;","import React from \"react\";\nimport styled from 'styled-components';\nimport _ from \"lodash\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Navigation } from \"swiper\";\nimport 'swiper/swiper-bundle.css';\n\nimport { Image } from 'components/common';\n\nSwiperCore.use([Navigation]);\n\ninterface Props {\n  detailCredits: any;\n}\n\nconst Input: React.FC<Props> = ({\n  detailCredits,\n}) => (\n  <Container>   \n    <SwiperBox>\n      <h2>{detailCredits?.data?.cast[0] && \"출연\"}</h2>\n      <Swiper\n        navigation\n        spaceBetween={50}\n        breakpoints={{\n          480: {\n            width: 480,\n            slidesPerView: 1,\n            centeredSlides: true,\n          },\n          481: {\n            width: 481,\n            slidesPerView: \"auto\",\n          },\n        }}\n      >\n        {detailCredits?.data?.cast?.map((result: any, i: number) => (\n          <SwiperSlide key={i}>\n            <Image \n              src={result.profile_path} \n              alt=\"profileImg\" \n              width=\"200\" \n              height=\"300\"              \n            />\n            <div className=\"castName\">{result.name}</div>\n            <div className=\"castCharacter\">{result.character}</div>\n          </SwiperSlide>\n        ))}\n      </Swiper>\n    </SwiperBox>\n\n    <SwiperBox>\n      <h2>{detailCredits?.data?.crew[0] && \"제작\"}</h2>\n      <Swiper\n        navigation\n        spaceBetween={50}\n        breakpoints={{\n          480: {\n            width: 480,\n            slidesPerView: 1,\n            centeredSlides: true,\n          },\n          481: {\n            width: 481,\n            slidesPerView: \"auto\",\n          },\n        }}\n      > \n        {_.uniqBy(detailCredits?.data?.crew, \"id\").map((result: any, i: number) => (\n          <SwiperSlide key={i}>\n            <Image \n              src={result.profile_path} \n              alt=\"profileImg\" \n              width=\"200\" \n              height=\"300\"\n            />\n            <div className=\"crewName\">{result.name}</div>\n            <div className=\"crewDepartment\">{result.known_for_department}</div>\n          </SwiperSlide>\n        ))}\n      </Swiper>\n    </SwiperBox>\n  </Container>\n)\n\nconst Container = styled.div`\n  margin-top: 70px;\n  h2 { \n    font-size: 24px;\n    margin-bottom: 20px;\n    font-weight: 600;\n    border-left: 3px solid rgba(255,0,0,0.7);\n    padding-left:10px;\n  }\n  .crewName, .castName {\n    margin-top: 10px;\n  }\n  .crewDepartment, .castCharacter {\n    margin-top: 2px;\n    color: #ccc;\n    font-size: 14px;\n  }\n  .swiper-slide {\n    width: 200px;\n  }\n  @media screen and (max-width: 480px) {\n    h2 { \n      margin-left: 5vw;\n    }   \n    .swiper-container {\n    }\n    .swiper-slide {\n      margin-right: 0px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    } \n  }\n`\nconst SwiperBox = styled.div`\n  margin-top: 70px;\n`\n\n\nexport default Input;","import React from \"react\";\nimport styled from 'styled-components';\nimport { Link } from \"react-router-dom\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Navigation } from \"swiper\";\nimport 'swiper/swiper-bundle.css';\n\nimport { Image } from 'components/common';\n\nSwiperCore.use([Navigation]);\n\ninterface Props {\n  detailSimilars: any;\n  isMovie: boolean;\n}\n\nconst DetailSimilars: React.FC<Props> = ({\n  detailSimilars,\n  isMovie\n}) => (\n  <Container>   \n    <h2>{detailSimilars?.data?.results[0] && \"관련 영화 추천\"}</h2>\n    <Swiper\n      navigation\n      spaceBetween={50}\n      breakpoints={{\n        480: {\n          width: 480,\n          slidesPerView: 1,\n          centeredSlides: true,\n        },\n        481: {\n          width: 481,\n          slidesPerView: \"auto\",\n        },\n      }}\n    >\n      {detailSimilars.data.results.map((result: any, i: number) => (\n        <SwiperSlide key={i}>\n          <Link to={isMovie ? `/movie/${result.id}` : `/tv/${result.id}`}>\n            <Image \n              src={result.poster_path} \n              alt=\"posterImg\" \n              width=\"200\" \n              height=\"300\"\n            />\n            <div className=\"titleName\">\n              {isMovie ? result.title : result.name}\n            </div>\n          </Link>\n        </SwiperSlide>\n      ))}\n    </Swiper>\n  </Container>\n)\n\nconst Container = styled.div`\n  margin-top: 70px;\n  h2 { \n    font-size: 24px;\n    margin-bottom: 20px;\n    font-weight: 600;\n    border-left: 3px solid rgba(255,0,0,0.7);\n    padding-left:10px;\n  }\n  .titleName {\n    margin-top: 10px;\n  }\n  .swiper-slide {\n    width: 200px;\n  }\n  @media screen and (max-width: 480px) {\n    h2 { \n      margin-left: 5vw;\n    }   \n    .swiper-container {\n    }\n    .swiper-slide {\n      margin-right: 0px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    } \n  }\n`\n\nexport default DetailSimilars;","import React from \"react\";\nimport styled from 'styled-components';\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Navigation } from \"swiper\";\nimport 'swiper/swiper-bundle.css';\n\nimport { Image } from 'components/common';\n\nSwiperCore.use([Navigation]);\n\ninterface Props {\n  detail: any;\n}\n\nconst DetailSeasons: React.FC<Props> = ({\n  detail\n}) => (\n  <Container>   \n    <h2>{detail?.data?.seasons[1] && \"시즌\"}</h2>    \n    <Swiper\n    navigation\n    spaceBetween={50}\n      breakpoints={{\n        480: {\n          width: 480,\n          slidesPerView: 1,\n          centeredSlides: true,\n        },\n        481: {\n          width: 481,\n          slidesPerView: \"auto\",\n        },\n      }}\n    >\n      {detail?.data?.seasons[1] && detail?.data?.seasons?.map((result: any, i: number) => (\n        <SwiperSlide key={i}>\n          <Image \n              src={result.poster_path} \n              alt=\"profileImg\" \n              width=\"200\" \n              height=\"300\"              \n            />\n            <div className=\"seasonName\">{result.name}</div>\n            <div className=\"seasonDate\">{result.air_date}</div>\n        </SwiperSlide>\n      ))}\n    </Swiper>\n  </Container>\n)\n\nconst Container = styled.div`\n  margin-top: 70px;\n  color:white;\n  h2 { \n    font-size: 24px;\n    margin-bottom: 20px;\n    font-weight: 600;\n  }\n  .seasonName {\n    margin-top: 10px;\n  }\n  .seasonDate {\n    margin-top: 5px;\n    font-size: 14px;\n    color: #ccc;\n  }\n  .swiper-slide {\n    width: 200px;\n  }\n  @media screen and (max-width: 480px) {\n    h2 { \n      margin-left: 5vw;\n    }   \n    .swiper-container {\n    }\n    .swiper-slide {\n      margin-right: 0px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    } \n  }\n`\n\nexport default DetailSeasons;","import React from \"react\";\nimport styled from 'styled-components';\n\nimport { DetailInfo, DetailVideos, DetailCredits, DetailSimilars, DetailSeasons } from \"./details\";\nimport { Loading } from 'components/common'\n\ninterface Props {\n  detail: any;\n  detailVideos: any;\n  detailCredits: any;\n  detailSimilars: any;\n  isMovie: boolean; \n}\n\nconst Detail: React.FC<Props> = ({\n  detail,\n  detailVideos,\n  detailCredits,\n  detailSimilars,\n  isMovie,\n}) => (\n  <Containter>   \n    {(detail.loading || detailVideos.loading || detailCredits.loading || detailSimilars.loading) ? \n      <Loading /> : \n      <>\n        {detail?.data && <DetailInfo detail={detail} isMovie={isMovie}/> } \n        {detailVideos?.data?.results && <DetailVideos detailVideos={detailVideos} isMovie={isMovie} /> } \n        {detail?.data?.seasons && <DetailSeasons detail={detail} /> } \n        {detailCredits?.data &&<DetailCredits detailCredits={detailCredits} /> }\n        {detailSimilars?.data?.results &&<DetailSimilars detailSimilars={detailSimilars} isMovie={isMovie}/> }\n      </>\n    }\n  </Containter>\n)\nconst Containter = styled.div`\n  color: white;\n  width: 100%;\n  height: 100%;\n`\n\n\nexport default Detail;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\n\ninterface Props {\n}\n\nconst Header: React.FC<Props> = (\n  \n) => (\n  <Containter className=\"App-header\">\n    <Logo to=\"/\">OKTV</Logo>\n    <Link to=\"/movie\">MOVIE</Link>\n    <Link to=\"/tv\">TV</Link>\n    <Link to=\"/search\">SEARCH</Link>\n  </Containter>\n)\n\nconst Containter = styled.div`\n  grid-area: header;\n  font-family: Oswald, sans-serif;\n  color: white;\n  font-size: 1.2rem;\n  width: 100%;\n  height: 100%;\n  padding-left: 50px;\n  display: flex;\n  align-items: center;\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 5px 2px;\n  a {\n    margin-right: 20px;\n  }\n  @media screen and (max-width: 480px) {\n    padding-left: 0px;\n  }\n`\nconst Logo = styled(Link)`\n  font-size: 2.5rem;\n  color: red;\n`\n\nexport default Header;","import React from \"react\";\nimport styled from 'styled-components';\n\nimport { MainSwiper, Loading } from 'components/common';\n\ninterface Props {\n  list: any,\n}\n\nconst Slider: React.FC<Props> = ({\n  list,\n}) => (\n  <Container>    \n    {list.loading && <Loading />}\n    {list?.data?.results[0] && <MainSwiper list={list} keyword=\"movie\" /> }\n  </Container>\n)\n\nconst Container = styled.div`\n  width: 100%;\n  height: calc(100vh - 70px);\n  color: white; \n`\n\nexport default Slider;","import React from 'react';\n\nimport { Header } from \"components\";\n\nconst HeaderContainer: React.FC = () => {\n  return (\n    <Header/>\n  );\n}\n\nexport default HeaderContainer;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { movieActions, televisionActions } from 'store/actions';\nimport { Home } from \"components\";\nimport { RootState } from \"store/rootReducer\";\n\ninterface Props { \n} \n\nconst HomeContainer: React.FC<Props> = (props) => {\n  const { nowPlayingMovies } : any = useSelector<any>((state: RootState) => state.movies);\n  const { onAirTelevisions } = useSelector((state: RootState) => state.televisions);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(movieActions.getNowPlayingMoviesRequest());\n    dispatch(televisionActions.getOnAirTelevisionsRequest());\n  },[dispatch])\n\n  return (\n    <Home \n      nowPlayingMovies={nowPlayingMovies}\n      onAirTelevisions={onAirTelevisions}\n    />\n  );\n}\n\nexport default HomeContainer;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { movieActions } from 'store/actions';\nimport { Movie } from \"components\";\nimport { RootState } from \"store/rootReducer\";\n\ninterface Props {\n}\n\nconst MovieContainer: React.FC<Props> = (props) => {\n  const { trendMovies, topRatedMovies } = useSelector((state: RootState) => state.movies);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(movieActions.getTrendMoviesRequest());\n    dispatch(movieActions.getTopRatedMoviesRequest());\n  },[dispatch])\n\n  return (\n    <Movie\n      trendMovies={trendMovies}\n      topRatedMovies={topRatedMovies}\n    />\n  );\n}\n\nexport default MovieContainer;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { televisionActions } from 'store/actions';\nimport { Television } from \"components\";\nimport { RootState } from \"store/rootReducer\";\n\ninterface Props {\n}\n\nconst TelevisionContainer: React.FC<Props> = (props) => {\n  const { popualarTelevisions, topRatedTelevisions } = useSelector((state: RootState) => state.televisions);\n  const dispatch = useDispatch(); \n\n  useEffect(() => {\n    dispatch(televisionActions.getPopualarTelevisionsRequest());\n    dispatch(televisionActions.getTopRatedTelevisionsRequest());\n  },[dispatch])\n\n  return (\n    <Television\n      popualarTelevisions={popualarTelevisions}\n      topRatedTelevisions={topRatedTelevisions}\n    />\n    \n  );\n}\n\nexport default TelevisionContainer;\n","import React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { searchActions } from 'store/actions';\nimport { Search } from \"components\";\nimport { RootState } from \"store/rootReducer\";\n\ninterface Props {\n}\n\nconst SearchContainer: React.FC<Props> = () => {\n  const { movies, televisions } = useSelector((state: RootState) => state.search);\n  const dispatch = useDispatch();\n\n  const searchDispatch = (searchParam: string) => {\n    dispatch(searchActions.getMoviesRequest(searchParam));\n    dispatch(searchActions.getTelevisionsRequest(searchParam));\n  }\n\n  return (\n    <Search\n      movies={movies}\n      televisions={televisions}\n      searchDispatch={searchDispatch}\n    />\n  );\n}\n\nexport default SearchContainer;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { movieActions, televisionActions } from 'store/actions';\nimport { Detail } from \"components\";\nimport { RootState } from \"store/rootReducer\";\n\ninterface Props {\n  id: string,\n  keyword: string,\n}\n\nconst DetailContainer: React.FC<Props> = ({ id, keyword}) => {\n  const keywardName = keyword === 'movie' ? 'movies' : 'televisions';\n  const isMovie = keyword === 'movie' ? true : false;\n  const { detail, detailVideos, detailCredits, detailSimilars } = useSelector((state: RootState) => state[keywardName]);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (keyword === 'movie') {\n      dispatch(movieActions.getDetailRequest(id));\n      dispatch(movieActions.getDetailVideosRequest(id));\n      dispatch(movieActions.getDetailCreditsRequest(id));\n      dispatch(movieActions.getDetailSimilarsRequest(id));\n    }else if (keyword === 'tv'){\n      dispatch(televisionActions.getDetailRequest(id));\n      dispatch(televisionActions.getDetailVideosRequest(id));\n      dispatch(televisionActions.getDetailCreditsRequest(id));\n      dispatch(televisionActions.getDetailSimilarsRequest(id));\n    }\n\n  },[dispatch, id, keyword])\n\n  return (\n    <Detail\n      detail={detail}\n      detailVideos={detailVideos}\n      detailCredits={detailCredits}\n      detailSimilars={detailSimilars}\n      isMovie={isMovie}\n    />\n  );\n}\n\nexport default DetailContainer;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { movieActions } from 'store/actions';\nimport { Slider } from \"components\";\nimport { RootState } from \"store/rootReducer\";\n\ninterface Props {\n}\n\nconst SliderContainer: React.FC<Props> = (props) => {\n  const { nowPlayingMovies } = useSelector((state: RootState) => state.movies);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(movieActions.getNowPlayingMoviesRequest());\n  },[dispatch])\n\n  return (\n    <Slider\n      list={nowPlayingMovies}\n    />\n  );\n}\n\nexport default SliderContainer;\n","import React from \"react\";\nimport { MainTemplate, Footer } from \"components\";\nimport { HeaderContainer, HomeContainer, SliderContainer } from \"containers\";\n\nconst Home: React.FC = () => {\n  return (\n  <MainTemplate header={<HeaderContainer />} footer={<Footer />} slider={<SliderContainer />} >\n    <HomeContainer />\n  </MainTemplate>\n  )\n}\n\nexport default Home;","import React from \"react\";\nimport { MainTemplate, Footer } from \"components\";\nimport { HeaderContainer, MovieContainer } from \"containers\";\n\n\nconst Movie: React.FC  = () => {\n  return (\n    <MainTemplate header={<HeaderContainer />} footer={<Footer />}>\n      <MovieContainer />\n    </MainTemplate>\n  )\n}\n\nexport default Movie;","import React from \"react\";\nimport { MainTemplate, Footer } from \"components\";\nimport { HeaderContainer, TelevisionContainer } from \"containers\";\n\nconst Television: React.FC = () => {\n  return (\n    <MainTemplate header={<HeaderContainer />} footer={<Footer />}>\n      <TelevisionContainer />\n    </MainTemplate>\n  )\n}\n\nexport default Television;","import React from \"react\";\n\nimport { MainTemplate, Footer } from \"components\";\nimport { HeaderContainer, SearchContainer } from \"containers\";\n\nconst Search: React.FC  = () => {\n  return (\n    <MainTemplate header={<HeaderContainer />} footer={<Footer />}>\n      <SearchContainer />\n    </MainTemplate>\n  )\n}\n\nexport default Search;","import React from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\n\nimport { MainTemplate, Footer } from \"components\";\nimport { HeaderContainer, DetailContainer } from \"containers\";\n\nconst Deatil: React.FC = () => {\n  const keyword = useLocation().pathname.split(\"/\")[1];\n  const { id } = useParams<{ id: string }>();\n  return (\n    <MainTemplate header={<HeaderContainer />} footer={<Footer />}>\n      <DetailContainer id={id} keyword={keyword}/>\n    </MainTemplate>\n  )\n}\n\nexport default Deatil;","import { Home, Movie, Television, Search, Detail } from \"pages\";\n\nexport const routes = [\n  {\n    path: \"/\",\n    page: Home,\n    exact: true\n  },\n  {\n    path: \"/movie\",\n    page: Movie,\n    exact: true\n  },\n  {\n    path: \"/movie/:id\",\n    page: Detail,\n    exact: true\n  },\n  {\n    path: \"/tv\",\n    page: Television,\n    exact: true\n  },\n  {\n    path: \"/tv/:id\",\n    page: Detail,\n    exact: true\n  },\n  {\n    path: \"/search\",\n    page: Search,\n    exact: false\n  }\n];\n","import { combineReducers } from \"redux\";\n\nimport movieReducer from './movie';\nimport televisionReducer from './television';\nimport searchnReducer from './search';\n\nexport const rootReducer = combineReducers({\n  movies: movieReducer,\n  televisions: televisionReducer,\n  search: searchnReducer\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;","import { all } from 'redux-saga/effects';\n\nimport { movieSagas } from './movie';\nimport { televisionSagas } from './television';\nimport { searchSagas } from './search';\n\nexport default function* rootSaga() {\n  yield all([\n    movieSagas(),\n    televisionSagas(),\n    searchSagas()\n  ]);\n}","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport logger from \"redux-logger\";\n\nimport { rootReducer } from \"./rootReducer\";\nimport rootSaga from \"./rootSaga\";\n\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const composeEnhancers =\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  const enhancers = composeEnhancers(applyMiddleware(\n    sagaMiddleware, \n    // logger\n  ));\n\n  const store = createStore(rootReducer, enhancers);\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n}\n\nconst rootStore = configureStore();\n\nexport default rootStore;\n","import React from 'react';\nimport { routes } from \"lib/routes\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from 'store';\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <Switch>\n        {routes.map(({ path, page, exact }, i) => (\n          <Route exact={exact} path={path} component={page} key={i} />\n        ))}\n      </Switch>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyles = createGlobalStyle`\n  ${reset}\n  * {\n    box-sizing: border-box;\n    font-family: Oswald, 'Noto Sans KR', sans-serif;\n  }\n  *:focus {\n    outline: 0;\n    outline: none;\n  }\n  body {\n    padding: 0;\n    margin: 0;\n    background-color: #222;\n  }\n  a {\n    text-decoration: none;\n    color: white;\n  }\n  input {\n    all: unset;\n  }\n`\n\nexport default GlobalStyles;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport GlobalStyles from 'styles/GlobalStyles'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <GlobalStyles/>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","import { REQUEST, SUCCESS, FAILURE } from 'store/constants';\nimport { createRequestTypes } from 'lib/redux/constants';\n\nexport const CONST = {\n  GET_TREND_MOVIES: createRequestTypes(\"movie/GET_TREND_MOVIES\"),\n  GET_TOP_RATED_MOVIES: createRequestTypes(\"movie/GET_TOP_RATED_MOVIES\"),\n  GET_NOW_PLAYING_MOVIES: createRequestTypes(\"movie/GET_NOW_PLAYING_MOVIES\"),\n  GET_DETAIL: createRequestTypes(\"movie/GET_DETAIL\"),\n  GET_DETAIL_VIDEOS: createRequestTypes(\"movie/GET_DETAIL_VIDEOS\"),\n  GET_DETAIL_CREDITS: createRequestTypes(\"movie/GET_DETAIL_CREDITS\"),\n  GET_DETAIL_SIMILARS: createRequestTypes(\"movie/GET_DETAIL_SIMILARS\"),\n}\n\nconst getTrendMoviesRequest = () => ({\n    type: CONST.GET_TREND_MOVIES[REQUEST],\n})\n\nconst getTrendMoviesSuccess = (payload: any) => ({ \n    type: CONST.GET_TREND_MOVIES[SUCCESS],\n    payload\n})\n\nconst getTrendMoviesFailure = (error: any) => ({ \n    type: CONST.GET_TREND_MOVIES[FAILURE],\n    error\n}) \n\n\nconst getTopRatedMoviesRequest = () => ({\n  type: CONST.GET_TOP_RATED_MOVIES[REQUEST],\n})\n\nconst getTopRatedMoviesSuccess = (payload: any) => ({ \n  type: CONST.GET_TOP_RATED_MOVIES[SUCCESS],\n  payload\n})\n\nconst getTopRatedMoviesFailure = (error: any) => ({ \n  type: CONST.GET_TOP_RATED_MOVIES[FAILURE],\n  error\n})\n\n\nconst getNowPlayingMoviesRequest = () => ({\n  type: CONST.GET_NOW_PLAYING_MOVIES[REQUEST],\n})\n\nconst getNowPlayingMoviesSuccess = (payload: any) => ({ \n  type: CONST.GET_NOW_PLAYING_MOVIES[SUCCESS],\n  payload\n})\n\nconst getNowPlayingMoviesFailure = (error: any) => ({ \n  type: CONST.GET_NOW_PLAYING_MOVIES[FAILURE],\n  error\n})\n\n\nconst getDetailRequest = (id: string) => ({\n  type: CONST.GET_DETAIL[REQUEST],\n  id,\n})\n\nconst getDetailSuccess = (payload: any) => ({ \n  type: CONST.GET_DETAIL[SUCCESS],\n  payload\n})\n\nconst getDetailFailure = (error: any) => ({ \n  type: CONST.GET_DETAIL[FAILURE],\n  error\n})\n\n\nconst getDetailVideosRequest = (id: string) => ({\n  type: CONST.GET_DETAIL_VIDEOS[REQUEST],\n  id,\n})\n\nconst getDetailVideosSuccess = (payload: any) => ({ \n  type: CONST.GET_DETAIL_VIDEOS[SUCCESS],\n  payload\n})\n\nconst getDetailVideosFailure = (error: any) => ({ \n  type: CONST.GET_DETAIL_VIDEOS[FAILURE],\n  error\n})\n\n\nconst getDetailCreditsRequest = (id: string) => ({\n  type: CONST.GET_DETAIL_CREDITS[REQUEST],\n  id,\n})\n\nconst getDetailCreditsSuccess = (payload: any) => ({ \n  type: CONST.GET_DETAIL_CREDITS[SUCCESS],\n  payload\n})\n\nconst getDetailCreditsFailure = (error: any) => ({ \n  type: CONST.GET_DETAIL_CREDITS[FAILURE],\n  error\n})\n\n\nconst getDetailSimilarsRequest = (id: string) => ({\n  type: CONST.GET_DETAIL_SIMILARS[REQUEST],\n  id,\n})\n\nconst getDetailSimilarsSuccess = (payload: any) => ({ \n  type: CONST.GET_DETAIL_SIMILARS[SUCCESS],\n  payload\n})\n\nconst getDetailSimilarsFailure = (error: any) => ({ \n  type: CONST.GET_DETAIL_SIMILARS[FAILURE],\n  error\n})\n\n\nexport const Actions = {\n  getTrendMoviesRequest,\n  getTrendMoviesSuccess,\n  getTrendMoviesFailure,\n  getTopRatedMoviesRequest,\n  getTopRatedMoviesSuccess,\n  getTopRatedMoviesFailure,\n  getNowPlayingMoviesRequest,\n  getNowPlayingMoviesSuccess,\n  getNowPlayingMoviesFailure,\n  getDetailRequest,\n  getDetailSuccess,\n  getDetailFailure,\n  getDetailVideosRequest,\n  getDetailVideosSuccess,\n  getDetailVideosFailure,\n  getDetailCreditsRequest,\n  getDetailCreditsSuccess,\n  getDetailCreditsFailure,\n  getDetailSimilarsRequest,\n  getDetailSimilarsSuccess,\n  getDetailSimilarsFailure\n}\n","import { REQUEST, SUCCESS, FAILURE } from 'store/constants';\nimport { createRequestTypes } from 'lib/redux/constants';\n \nexport const CONST = {\n  GET_ON_AIR_TELEVISIONS: createRequestTypes(\"tv/GET_ON_AIR_TELEVISIONS\"),\n  GET_TOP_RATED_TELEVISIONS: createRequestTypes(\"tv/GET_TOP_RATED_TELEVISIONS\"),\n  GET_POPULAR_TELEVISIONS: createRequestTypes(\"tv/GET_POPULAR_TELEVISIONS\"),\n  GET_DETAIL: createRequestTypes(\"tv/GET_DETAIL\"),\n  GET_DETAIL_VIDEOS: createRequestTypes(\"tv/GET_DETAIL_VIDEOS\"),\n  GET_DETAIL_CREDITS: createRequestTypes(\"tv/GET_DETAIL_CREDITS\"),\n  GET_DETAIL_SIMILARS: createRequestTypes(\"tv/GET_DETAIL_SIMILARS\"),\n}\n \nconst getOnAirTelevisionsRequest = () => ({\n  type: CONST.GET_ON_AIR_TELEVISIONS[REQUEST],\n})\n\nconst getOnAirTelevisionsSuccess = (payload: any) => ({ \n  type: CONST.GET_ON_AIR_TELEVISIONS[SUCCESS],\n  payload\n})\n\nconst getOnAirTelevisionsFailure = (error: any) => ({ \n  type: CONST.GET_ON_AIR_TELEVISIONS[FAILURE],\n  error\n})\n\n\nconst getTopRatedTelevisionsRequest = () => ({\n  type: CONST.GET_TOP_RATED_TELEVISIONS[REQUEST],\n})\n\nconst getTopRatedTelevisionsSuccess = (payload: any) => ({ \n  type: CONST.GET_TOP_RATED_TELEVISIONS[SUCCESS],\n  payload\n})\n\nconst getTopRatedTelevisionsFailure = (error: any) => ({ \n  type: CONST.GET_TOP_RATED_TELEVISIONS[FAILURE],\n  error\n})\n\n\nconst getPopualarTelevisionsRequest = () => ({\n  type: CONST.GET_POPULAR_TELEVISIONS[REQUEST],\n})\n\nconst getPopualarTelevisionsSuccess = (payload: any) => ({ \n  type: CONST.GET_POPULAR_TELEVISIONS[SUCCESS],\n  payload\n})\n\nconst getPopualarTelevisionsFailure = (error: any) => ({ \n  type: CONST.GET_POPULAR_TELEVISIONS[FAILURE],\n  error\n})\n\n\nconst getDetailRequest = (id: string) => ({\n  type: CONST.GET_DETAIL[REQUEST],\n  id,\n})\n\nconst getDetailSuccess = (payload: any) => ({ \n  type: CONST.GET_DETAIL[SUCCESS],\n  payload\n})\n\nconst getDetailFailure = (error: any) => ({ \n  type: CONST.GET_DETAIL[FAILURE],\n  error\n})\n\nconst getDetailVideosRequest = (id: string) => ({\n  type: CONST.GET_DETAIL_VIDEOS[REQUEST],\n  id,\n})\n\nconst getDetailVideosSuccess = (payload: any) => ({ \n  type: CONST.GET_DETAIL_VIDEOS[SUCCESS],\n  payload\n})\n\nconst getDetailVideosFailure = (error: any) => ({ \n  type: CONST.GET_DETAIL_VIDEOS[FAILURE],\n  error\n})\n\n\nconst getDetailCreditsRequest = (id: string) => ({\n  type: CONST.GET_DETAIL_CREDITS[REQUEST],\n  id,\n})\n\nconst getDetailCreditsSuccess = (payload: any) => ({ \n  type: CONST.GET_DETAIL_CREDITS[SUCCESS],\n  payload\n})\n\nconst getDetailCreditsFailure = (error: any) => ({ \n  type: CONST.GET_DETAIL_CREDITS[FAILURE],\n  error\n})\n\n\nconst getDetailSimilarsRequest = (id: string) => ({\n  type: CONST.GET_DETAIL_SIMILARS[REQUEST],\n  id,\n})\n\nconst getDetailSimilarsSuccess = (payload: any) => ({ \n  type: CONST.GET_DETAIL_SIMILARS[SUCCESS],\n  payload\n})\n\nconst getDetailSimilarsFailure = (error: any) => ({ \n  type: CONST.GET_DETAIL_SIMILARS[FAILURE],\n  error\n})\n\n\nexport const Actions = {\n  getOnAirTelevisionsRequest,\n  getOnAirTelevisionsSuccess,\n  getOnAirTelevisionsFailure,\n  getTopRatedTelevisionsRequest,\n  getTopRatedTelevisionsSuccess,\n  getTopRatedTelevisionsFailure,\n  getPopualarTelevisionsRequest,\n  getPopualarTelevisionsSuccess,\n  getPopualarTelevisionsFailure,\n  getDetailRequest,\n  getDetailSuccess,\n  getDetailFailure,\n  getDetailVideosRequest,\n  getDetailVideosSuccess,\n  getDetailVideosFailure,\n  getDetailCreditsRequest,\n  getDetailCreditsSuccess,\n  getDetailCreditsFailure,\n  getDetailSimilarsRequest,\n  getDetailSimilarsSuccess,\n  getDetailSimilarsFailure\n}\n","import axios, { AxiosInstance, AxiosResponse } from \"axios\";\n\nexport interface Error {\n  code: number;\n  field: string;\n  message: string;\n  status: number;\n}\n\nclass Client {\n  private axios: AxiosInstance;\n\n  constructor() {\n    this.axios = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      timeout: 5000,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      params: {\n        api_key: process.env.REACT_APP_API_KEY,\n        language: \"ko-KR\",\n      },\n    });\n  }\n  get(path: string, payload = null as any) {\n    return this.axios\n      .get(path, payload)\n      .then((response: AxiosResponse) => response);\n  }\n\n  post(path: string, payload: any) {\n    return this.axios\n      .post(path, payload)\n      .then((response: AxiosResponse) => response);\n  }\n\n  put(path: string, payload: any) {\n    return this.axios\n      .put(path, payload)\n      .then((result: AxiosResponse) => result);\n  }\n\n  delete(path: string, payload = null as any) {\n    return this.axios\n      .delete(path, payload)\n      .then((result: AxiosResponse) => result);\n  }\n}\n\nconst client = new Client();\n\nexport default client;\n","export const REQUEST = \"REQUEST\";\nexport const SUCCESS = \"SUCCESS\";\nexport const FAILURE = \"FAILURE\";","interface CreateRequestTypes {\n  [key: string]: string;\n}\n\nexport function createRequestTypes(base: string): CreateRequestTypes {\n  return [\"REQUEST\", \"SUCCESS\", \"FAILURE\"].reduce(\n    (acc: CreateRequestTypes, type: string) => {\n      acc[type] = `${base}_${type}`;\n      return acc;\n    },\n    {}\n  );\n}","import { REQUEST, SUCCESS, FAILURE } from 'store/constants';\nimport { createRequestTypes } from 'lib/redux/constants';\n\nexport const CONST = {\n  GET_MOVIES: createRequestTypes(\"search/GET_MOVIES\"),\n  GET_TELEVISIONS: createRequestTypes(\"search/GET_TELEVISIONS\"),\n}\n\nconst getMoviesRequest = (queryString: string) => ({\n    type: CONST.GET_MOVIES[REQUEST],\n    queryString: `query=${queryString}`,\n})\n\nconst getMoviesSuccess = (payload: any) => ({ \n    type: CONST.GET_MOVIES[SUCCESS],\n    payload\n})\n\nconst getMoviesFailure = (error: any) => ({ \n    type: CONST.GET_MOVIES[FAILURE],\n    error\n}) \n\nconst getTelevisionsRequest = (queryString: string) => ({\n  type: CONST.GET_TELEVISIONS[REQUEST],\n  queryString: `query=${queryString}`,\n})\n\nconst getTelevisionsSuccess = (payload: any) => ({ \n  type: CONST.GET_TELEVISIONS[SUCCESS],\n  payload\n})\n\nconst getTelevisionsFailure = (error: any) => ({ \n  type: CONST.GET_TELEVISIONS[FAILURE],\n  error\n})\n\nexport const Actions = {\n  getMoviesRequest,\n  getMoviesSuccess,\n  getMoviesFailure,\n  getTelevisionsRequest,\n  getTelevisionsSuccess,\n  getTelevisionsFailure,\n}\n","export { default } from './reducer';\nexport * from './actions';\nexport * from './types';\nexport * from './sagas';","export { default } from './reducer';\nexport * from './actions';\nexport * from './types';\nexport * from './sagas';","export { default } from './reducer';\nexport * from './actions';\nexport * from './types';\nexport * from './sagas';","import { REQUEST, SUCCESS, FAILURE } from 'store/constants';\nimport { CONST } from './actions';\n\nconst initialState = {\n  trendMovies: {\n    loading: false,\n    error: null,\n    data: null\n  },\n  topRatedMovies: {\n    loading: false,\n    error: null,\n    data: null\n  },\n  nowPlayingMovies: {\n    loading: false,\n    error: null,\n    data: null\n  },\n  detail: {\n    loading: false,\n    error: null,\n    data: null\n  },\n  detailVideos: {\n    loading: false,\n    error: null,\n    data: null\n  },\n  detailCredits: {\n    loading: false,\n    error: null,\n    data: null\n  },\n  detailSimilars: {\n    loading: false,\n    error: null,\n    data: null\n  },\n};\n\nconst movieReducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case CONST.GET_TREND_MOVIES[REQUEST]:\n      return { \n        ...state, \n        trendMovies: {\n          loading: true,\n        } \n      };\n    case CONST.GET_TREND_MOVIES[SUCCESS]:\n      return { \n        ...state, \n        trendMovies: {\n          loading: false,\n          data: action.payload\n        } \n      };\n    case CONST.GET_TREND_MOVIES[FAILURE]: \n      return { \n        ...state, \n        trendMovies: {\n          loading: false,\n          error: true,\n          data: null\n        } \n      };\n    case CONST.GET_TOP_RATED_MOVIES[REQUEST]:\n      return { \n        ...state, \n        topRatedMovies: {\n          loading: true,\n        } \n      };\n    case CONST.GET_TOP_RATED_MOVIES[SUCCESS]:\n      return { \n        ...state, \n        topRatedMovies: {\n          loading: false,\n          data: action.payload\n        } \n      };\n    case CONST.GET_TOP_RATED_MOVIES[FAILURE]: \n      return { \n        ...state, \n        topRatedMovies: {\n          loading: false,\n          error: true,\n          data: null\n        } \n      };\n    case CONST.GET_NOW_PLAYING_MOVIES[REQUEST]:\n      return { \n        ...state, \n        nowPlayingMovies: {\n          loading: true,\n        } \n      };\n    case CONST.GET_NOW_PLAYING_MOVIES[SUCCESS]:\n      return { \n        ...state, \n        nowPlayingMovies: {\n          loading: false,\n          data: action.payload\n        } \n      };\n    case CONST.GET_NOW_PLAYING_MOVIES[FAILURE]: \n      return { \n        ...state, \n        nowPlayingMovies: {\n          loading: false,\n          error: true,\n          data: null\n        } \n      };\n    case CONST.GET_DETAIL[REQUEST]:\n      return { \n        ...state, \n        detail: {\n          loading: true,\n        } \n      };\n    case CONST.GET_DETAIL[SUCCESS]:\n      return { \n        ...state, \n        detail: {\n          loading: false,\n          data: action.payload\n        } \n      };\n    case CONST.GET_DETAIL[FAILURE]: \n      return { \n        ...state, \n        detail: {\n          loading: false,\n          error: true,\n          data: action.error\n        } \n      };\n    case CONST.GET_DETAIL_VIDEOS[REQUEST]:\n      return { \n        ...state, \n        detailVideos: {\n          loading: true,\n        } \n      };\n    case CONST.GET_DETAIL_VIDEOS[SUCCESS]:\n      return { \n        ...state, \n        detailVideos: {\n          loading: false,\n          data: action.payload\n        } \n      };\n    case CONST.GET_DETAIL_VIDEOS[FAILURE]: \n      return { \n        ...state, \n        detailVideos: {\n          loading: false,\n          error: true,\n          data: action.error\n        } \n      };\n    case CONST.GET_DETAIL_CREDITS[REQUEST]:\n      return { \n        ...state, \n        detailCredits: {\n          loading: true,\n        } \n      };\n    case CONST.GET_DETAIL_CREDITS[SUCCESS]:\n      return { \n        ...state, \n        detailCredits: {\n          loading: false,\n          data: action.payload\n        } \n      };\n    case CONST.GET_DETAIL_CREDITS[FAILURE]: \n      return { \n        ...state, \n        detailCredits: {\n          loading: false,\n          error: true,\n          data: action.error\n        } \n      };\n    case CONST.GET_DETAIL_SIMILARS[REQUEST]:\n      return { \n        ...state, \n        detailSimilars: {\n          loading: true,\n        } \n      };\n    case CONST.GET_DETAIL_SIMILARS[SUCCESS]:\n      return { \n        ...state, \n        detailSimilars: {\n          loading: false,\n          data: action.payload\n        } \n      };\n    case CONST.GET_DETAIL_SIMILARS[FAILURE]: \n      return { \n        ...state, \n        detailSimilars: {\n          loading: false,\n          error: true,\n          data: action.error\n        } \n      };\n    default:\n      return state;\n  }\n};\n\nexport default movieReducer;","import { REQUEST, SUCCESS, FAILURE } from 'store/constants';\nimport { CONST } from './actions';\n\nconst initialState = {\n  onAirTelevisions: { \n    loading: false,\n    error: null,\n    data: null\n  },\n  topRatedTelevisions: {\n    loading: false,\n    error: null,\n    data: null\n  },\n  popualarTelevisions: {\n    loading: false,\n    error: null,\n    data: null\n  },\n  detail: {\n    loading: false,\n    error: null,\n    data: null\n  },\n  detailVideos: {\n    loading: false,\n    error: null,\n    data: null\n  },\n  detailCredits: {\n    loading: false,\n    error: null,\n    data: null\n  },\n  detailSimilars: {\n    loading: false,\n    error: null,\n    data: null\n  },\n};\n\nconst televisionReducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case CONST.GET_ON_AIR_TELEVISIONS[REQUEST]:\n      return { \n        ...state, \n        onAirTelevisions: {\n          loading: true,\n        } \n      };\n    case CONST.GET_ON_AIR_TELEVISIONS[SUCCESS]:\n      return { \n        ...state, \n        onAirTelevisions: {\n          loading: false,\n          data: action.payload\n        } \n      };\n    case CONST.GET_ON_AIR_TELEVISIONS[FAILURE]: \n      return { \n        ...state, \n        onAirTelevisions: {\n          loading: false,\n          error: true,\n          data: action.error\n        } \n      };\n    case CONST.GET_TOP_RATED_TELEVISIONS[REQUEST]:\n      return { \n        ...state, \n        topRatedTelevisions: {\n          loading: true,\n        } \n      };\n    case CONST.GET_TOP_RATED_TELEVISIONS[SUCCESS]:\n      return { \n        ...state, \n        topRatedTelevisions: {\n          loading: false,\n          data: action.payload\n        } \n      };\n    case CONST.GET_TOP_RATED_TELEVISIONS[FAILURE]: \n      return { \n        ...state, \n        topRatedTelevisions: {\n          loading: false,\n          error: true,\n          data: action.error\n        } \n      };\n    case CONST.GET_POPULAR_TELEVISIONS[REQUEST]:\n      return { \n        ...state, \n        popualarTelevisions: {\n          loading: true,\n        } \n      };\n    case CONST.GET_POPULAR_TELEVISIONS[SUCCESS]:\n      return { \n        ...state, \n        popualarTelevisions: {\n          loading: false,\n          data: action.payload\n        } \n      };\n    case CONST.GET_POPULAR_TELEVISIONS[FAILURE]: \n      return { \n        ...state, \n        popualarTelevisions: {\n          loading: false,\n          error: true,\n          data: action.error\n        } \n      };\n    case CONST.GET_DETAIL[REQUEST]:\n      return { \n        ...state, \n        detail: {\n          loading: true,\n        } \n      };\n    case CONST.GET_DETAIL[SUCCESS]:\n      return { \n        ...state, \n        detail: {\n          loading: false,\n          data: action.payload\n        } \n      };\n    case CONST.GET_DETAIL[FAILURE]: \n      return { \n        ...state, \n        detail: {\n          loading: false,\n          error: true,\n          data: action.error\n        } \n      };\n    case CONST.GET_DETAIL_VIDEOS[REQUEST]:\n      return { \n        ...state, \n        detailVideos: {\n          loading: true,\n        } \n      };\n    case CONST.GET_DETAIL_VIDEOS[SUCCESS]:\n      return { \n        ...state, \n        detailVideos: {\n          loading: false,\n          data: action.payload\n        } \n      };\n    case CONST.GET_DETAIL_VIDEOS[FAILURE]: \n      return { \n        ...state, \n        detailVideos: {\n          loading: false,\n          error: true,\n          data: action.error\n        } \n      };\n    case CONST.GET_DETAIL_CREDITS[REQUEST]:\n      return { \n        ...state, \n        detailCredits: {\n          loading: true,\n        } \n      };\n    case CONST.GET_DETAIL_CREDITS[SUCCESS]:\n      return { \n        ...state, \n        detailCredits: {\n          loading: false,\n          data: action.payload\n        } \n      };\n    case CONST.GET_DETAIL_CREDITS[FAILURE]: \n      return { \n        ...state, \n        detailCredits: {\n          loading: false,\n          error: true,\n          data: action.error\n        } \n      };\n    case CONST.GET_DETAIL_SIMILARS[REQUEST]:\n      return { \n        ...state, \n        detailSimilars: {\n          loading: true,\n        } \n      };\n    case CONST.GET_DETAIL_SIMILARS[SUCCESS]:\n      return { \n        ...state, \n        detailSimilars: {\n          loading: false,\n          data: action.payload\n        } \n      };\n    case CONST.GET_DETAIL_SIMILARS[FAILURE]: \n      return { \n        ...state, \n        detailSimilars: {\n          loading: false,\n          error: true,\n          data: action.error\n        } \n      };\n    default:\n      return state;\n  }\n};\n\nexport default televisionReducer;","import { REQUEST, SUCCESS, FAILURE } from 'store/constants';\nimport { CONST } from './actions';\n\nconst initialState = {\n  movies: {\n    loading: false,\n    error: null,\n    data: null\n  },\n  televisions: {\n    loading: false,\n    error: null,\n    data: null\n  },\n};\n\nconst searchReducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case CONST.GET_MOVIES[REQUEST]:\n      return { \n        ...state, \n        movies: {\n          loading: true,\n        } \n      };\n    case CONST.GET_MOVIES[SUCCESS]:\n      return { \n        ...state, \n        movies: {\n          loading: false,\n          data: action.payload\n        } \n      };\n    case CONST.GET_MOVIES[FAILURE]: \n      return { \n        ...state, \n        movies: {\n          loading: false,\n          error: true,\n          data: null\n        } \n      };\n    case CONST.GET_TELEVISIONS[REQUEST]:\n      return { \n        ...state, \n        televisions: {\n          loading: true,\n        } \n      };\n    case CONST.GET_TELEVISIONS[SUCCESS]:\n      return { \n        ...state, \n        televisions: {\n          loading: false,\n          data: action.payload\n        } \n      };\n    case CONST.GET_TELEVISIONS[FAILURE]: \n      return { \n        ...state, \n        televisions: {\n          loading: false,\n          error: true,\n          data: null\n        } \n      };\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;","import client from 'lib/client';\n\nexport const getUserProfile = () =>\n  client.get(`trending/movie/day`);\n\n//오늘의 인기영화\nexport const getTodayMovies = () => \n  client.get(`trending/movie/day`);\n\n//주간 인기영화\nexport const getWeeklyMovies = () =>\n  client.get(`trending/movie/week`);\n\n//오늘의 인기영화\nexport const getPopularMovies = () => \n  client.get(`movie/popular`);\n\n//평점높은 영화\nexport const getTopRatedMovies = () => \n  client.get(`movie/top_rated`);\n\n//상영중인 영화\nexport const getNowPlayingMovies = () => \n  client.get(`movie/now_playing`);\n\n\n//영화 상세정보\nexport const getMovieDetail = (id: string) => \n  client.get(`movie/${id}`);\n\n//관련영상\nexport const getMovieVideos = (id: string) => \n  client.get(`movie/${id}/videos`);\n\n//비슷한 영화\nexport const getMovieCredits = (id: string) => \n  client.get(`movie/${id}/credits`);\n\n//영화 크레딧\nexport const getMovieSimilar = (id: string) => \n  client.get(`movie/${id}/similar`);\n\n\n\n\nexport interface GithubProfile {\n\n}","import { REQUEST } from 'store/constants';\nimport { takeEvery, put, call } from \"redux-saga/effects\";\nimport { \n  getTodayMovies, \n  getTopRatedMovies, \n  getNowPlayingMovies,\n  getMovieDetail,\n  getMovieVideos,\n  getMovieCredits,\n  getMovieSimilar,\n  // GithubProfile \n} from 'lib/api/movies';\n\nimport { CONST, Actions } from './actions';\n\nfunction* getTrendMoviesSaga() {\n  try {\n    const { data } = yield call(getTodayMovies);\n    yield put(Actions.getTrendMoviesSuccess(data));\n  } catch (error) {\n    yield put(Actions.getTrendMoviesFailure(error));\n  } \n}\n\nfunction* getTopRatedMoviesSaga() {\n  try {\n    const { data } = yield call(getTopRatedMovies);\n    yield put(Actions.getTopRatedMoviesSuccess(data));\n  } catch (error) {\n    yield put(Actions.getTopRatedMoviesFailure(error));\n  }\n}\n\nfunction* getNowPlayingMoviesSaga() {\n  try {\n    const { data } = yield call(getNowPlayingMovies);\n    yield put(Actions.getNowPlayingMoviesSuccess(data));\n  } catch (error) {\n    yield put(Actions.getNowPlayingMoviesFailure(error));\n  }\n}\n\nfunction* getDetailSaga(action: any) {\n  try {\n    const { data } = yield call(getMovieDetail, action.id);\n    yield put(Actions.getDetailSuccess(data));\n  } catch (error) {\n    yield put(Actions.getDetailFailure(error));\n  }\n}\n\nfunction* getDetailVideosSaga(action: any) {\n  try {\n    const { data } = yield call(getMovieVideos, action.id);\n    yield put(Actions.getDetailVideosSuccess(data));\n  } catch (error) {\n    yield put(Actions.getDetailVideosFailure(error));\n  }\n}\n\nfunction* getDetailCreditsSaga(action: any) {\n  try {\n    const { data } = yield call(getMovieCredits, action.id);\n    yield put(Actions.getDetailCreditsSuccess(data));\n  } catch (error) {\n    yield put(Actions.getDetailCreditsFailure(error));\n  }\n}\n\nfunction* getDetailSimilarSaga(action: any) {\n  try {\n    const { data } = yield call(getMovieSimilar, action.id);\n    yield put(Actions.getDetailSimilarsSuccess(data));\n  } catch (error) {\n    yield put(Actions.getDetailSimilarsFailure(error));\n  }\n}\n\nexport function* movieSagas() {\n  yield takeEvery(CONST.GET_TREND_MOVIES[REQUEST], getTrendMoviesSaga);\n  yield takeEvery(CONST.GET_TOP_RATED_MOVIES[REQUEST], getTopRatedMoviesSaga);\n  yield takeEvery(CONST.GET_NOW_PLAYING_MOVIES[REQUEST], getNowPlayingMoviesSaga);\n  yield takeEvery(CONST.GET_DETAIL[REQUEST], getDetailSaga);\n  yield takeEvery(CONST.GET_DETAIL_VIDEOS[REQUEST], getDetailVideosSaga);\n  yield takeEvery(CONST.GET_DETAIL_CREDITS[REQUEST], getDetailCreditsSaga);\n  yield takeEvery(CONST.GET_DETAIL_SIMILARS[REQUEST], getDetailSimilarSaga);\n}\n","import client from 'lib/client';\n\n//오늘방영 방송\nexport const getAiringTodayTv = () => \n  client.get(`tv/airing_today`);\n\n//방영중인 방송\nexport const getOnAirTv = () => \n  client.get(`tv/on_the_air`);\n\n//인기 방송\nexport const getPopularTv = () => \n  client.get(`tv/popular`);\n\n//평점순 방송\nexport const getTopRatedTv = () => \n  client.get(`tv/top_rated`);\n\n\n//방송 상세정보\nexport const getTvDetail = (id: string) => \n  client.get(`tv/${id}`);\n\n//관련영상\nexport const getTvVideos = (id: string) => \n  client.get(`tv/${id}/videos`);\n\n//비슷한 방송\nexport const getTvCredits = (id: string) => \n  client.get(`tv/${id}/credits`);\n\n//방송 크레딧\nexport const getTvSimilar = (id: string) => \n  client.get(`tv/${id}/similar`);\n\n\n","import { REQUEST } from 'store/constants';\nimport { takeEvery, put, call } from \"redux-saga/effects\";\nimport { \n  getOnAirTv, \n  getPopularTv,\n  getTopRatedTv,\n  getTvDetail,\n  getTvVideos,\n  getTvCredits,\n  getTvSimilar,\n} from 'lib/api/televisions';\n\nimport { CONST, Actions } from './actions';\n\nfunction* getOnAirTelevisionsSaga(action: any) {\n  try {\n    const { data } = yield call(getOnAirTv);\n    yield put(Actions.getOnAirTelevisionsSuccess(data));\n  } catch (error) {\n    yield put(Actions.getOnAirTelevisionsFailure(error));\n  }\n} \n\nfunction* getTopRatedTelevisionsSaga(action: any) {\n  try {\n    const { data } = yield call(getTopRatedTv);\n    yield put(Actions.getTopRatedTelevisionsSuccess(data));\n  } catch (error) {\n    yield put(Actions.getTopRatedTelevisionsFailure(error));\n  }\n}\n\nfunction* getPopualarTelevisionsSaga(action: any) {\n  try {\n    const { data } = yield call(getPopularTv);\n    yield put(Actions.getPopualarTelevisionsSuccess(data));\n  } catch (error) {\n    yield put(Actions.getPopualarTelevisionsFailure(error));\n  }\n}\n\nfunction* getDetailSaga(action: any) {\n  try {\n    const { data } = yield call(getTvDetail, action.id);\n    yield put(Actions.getDetailSuccess(data));\n  } catch (error) {\n    yield put(Actions.getDetailFailure(error));\n  }\n}\nfunction* getDetailVideosSaga(action: any) {\n  try {\n    const { data } = yield call(getTvVideos, action.id);\n    yield put(Actions.getDetailVideosSuccess(data));\n  } catch (error) {\n    yield put(Actions.getDetailVideosFailure(error));\n  }\n}\n\nfunction* getDetailCreditsSaga(action: any) {\n  try {\n    const { data } = yield call(getTvCredits, action.id);\n    yield put(Actions.getDetailCreditsSuccess(data));\n  } catch (error) {\n    yield put(Actions.getDetailCreditsFailure(error));\n  }\n}\n\nfunction* getDetailSimilarSaga(action: any) {\n  try {\n    const { data } = yield call(getTvSimilar, action.id);\n    yield put(Actions.getDetailSimilarsSuccess(data));\n  } catch (error) {\n    yield put(Actions.getDetailSimilarsFailure(error));\n  }\n}\n\nexport function* televisionSagas() {\n  yield takeEvery(CONST.GET_ON_AIR_TELEVISIONS[REQUEST], getOnAirTelevisionsSaga);\n  yield takeEvery(CONST.GET_TOP_RATED_TELEVISIONS[REQUEST], getTopRatedTelevisionsSaga);\n  yield takeEvery(CONST.GET_POPULAR_TELEVISIONS[REQUEST], getPopualarTelevisionsSaga);\n  yield takeEvery(CONST.GET_DETAIL[REQUEST], getDetailSaga);\n  yield takeEvery(CONST.GET_DETAIL_VIDEOS[REQUEST], getDetailVideosSaga);\n  yield takeEvery(CONST.GET_DETAIL_CREDITS[REQUEST], getDetailCreditsSaga);\n  yield takeEvery(CONST.GET_DETAIL_SIMILARS[REQUEST], getDetailSimilarSaga);\n}\n","import client from 'lib/client';\n//영화에서 검색\nexport const getSearchMovies = (queryString: string) => \n  client.get(`search/movie?${queryString}`);\n\n//티비에서 검색\nexport const getSearchTelevisions = (queryString: string) => \n  client.get(`search/tv?${queryString}`);\n\n  ","import { REQUEST } from 'store/constants';\nimport { takeEvery, put, call } from \"redux-saga/effects\";\nimport { \n  getSearchMovies, \n  getSearchTelevisions, \n  // GithubProfile \n} from 'lib/api/search';\n\nimport { CONST, Actions } from './actions';\n\nfunction* getMoviesSaga(action: any) {\n  try {\n    const { data } = yield call(getSearchMovies, action.queryString);\n    yield put(Actions.getMoviesSuccess(data));\n  } catch (error) {\n    yield put(Actions.getMoviesFailure(error));\n  } \n}\n\nfunction* getTelevisionsSaga(action: any) {\n  try {\n    const { data } = yield call(getSearchTelevisions, action.queryString);\n    yield put(Actions.getTelevisionsSuccess(data));\n  } catch (error) {\n    yield put(Actions.getTelevisionsFailure(error));\n  }\n}\n\nexport function* searchSagas() {\n  yield takeEvery(CONST.GET_MOVIES[REQUEST], getMoviesSaga);\n  yield takeEvery(CONST.GET_TELEVISIONS[REQUEST], getTelevisionsSaga);\n}\n"],"sourceRoot":""}